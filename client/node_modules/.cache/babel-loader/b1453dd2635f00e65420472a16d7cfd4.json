{"ast":null,"code":"var _jsxFileName = \"/home/raju/Web Project/mern/socialPractise/client/src/pages/ResetPswd/ResetPswd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { Link, useParams } from 'react-router-dom';\nimport { passwordReset } from '../../redux/actions/pswdResetAction';\nimport './resetPswd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPswd = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const params = useParams();\n  const resetPswd = useSelector(state => state.resetPswd);\n  const [resetPassword, setResetPassword] = useState(\"\");\n\n  const submitResetPswdHandler = e => {\n    e.preventDefault();\n    dispatch(passwordReset(params.token, resetPassword));\n    setResetPassword(\"\");\n  };\n\n  useEffect(() => {\n    if (resetPswd.msg) {\n      alert.success(resetPswd.msg);\n    }\n\n    if (resetPswd.error) {\n      alert.error(resetPswd.error);\n    }\n  }, [alert, resetPswd.msg, resetPswd.error]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset_pswd_box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset_pswd_box_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"reset_pswd_header\",\n          children: \"Social Web\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"reset_pswd_form\",\n          onSubmit: submitResetPswdHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            placeholder: \"New Password\",\n            type: \"text\",\n            value: resetPassword,\n            onChange: e => setResetPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"reset_pswd_btn\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Go to login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPswd, \"Y8MIz1s1MYipctN2iTow72FSMYM=\", false, function () {\n  return [useDispatch, useAlert, useParams, useSelector];\n});\n\n_c = ResetPswd;\nexport default ResetPswd;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPswd\");","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/pages/ResetPswd/ResetPswd.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useAlert","Link","useParams","passwordReset","ResetPswd","dispatch","alert","params","resetPswd","state","resetPassword","setResetPassword","submitResetPswdHandler","e","preventDefault","token","msg","success","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,SAAS,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMgB,sBAAsB,GAAIC,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACF,aAAa,CAACI,MAAM,CAACQ,KAAR,EAAeL,aAAf,CAAd,CAAR;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,GAJD;;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,SAAS,CAACQ,GAAb,EAAkB;AACdV,MAAAA,KAAK,CAACW,OAAN,CAAcT,SAAS,CAACQ,GAAxB;AACH;;AACD,QAAGR,SAAS,CAACU,KAAb,EAAoB;AAChBZ,MAAAA,KAAK,CAACY,KAAN,CAAYV,SAAS,CAACU,KAAtB;AACH;AACJ,GAPQ,EAON,CAACZ,KAAD,EAAQE,SAAS,CAACQ,GAAlB,EAAuBR,SAAS,CAACU,KAAjC,CAPM,CAAT;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAkC,UAAA,QAAQ,EAAEN,sBAA5C;AAAA,kCAEI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,WAAW,EAAC,cAFb;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,KAAK,EAAEF,aAJR;AAKC,YAAA,QAAQ,EAAGG,CAAD,IAAOF,gBAAgB,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eASI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA3CD;;GAAMhB,S;UACeL,W,EACHC,Q,EACCE,S,EACGJ,W;;;KAJhBM,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useAlert} from 'react-alert'\nimport {Link, useParams} from 'react-router-dom'\nimport { passwordReset } from '../../redux/actions/pswdResetAction'\nimport './resetPswd.css'\n\nconst ResetPswd = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const params = useParams()\n    const resetPswd = useSelector(state => state.resetPswd)\n    const [resetPassword, setResetPassword] = useState(\"\")\n\n    const submitResetPswdHandler = (e) => {\n        e.preventDefault()\n        dispatch(passwordReset(params.token, resetPassword))\n        setResetPassword(\"\")\n    }\n\n    useEffect(() => {\n        if(resetPswd.msg) {\n            alert.success(resetPswd.msg)\n        }\n        if(resetPswd.error) {\n            alert.error(resetPswd.error)\n        }\n    }, [alert, resetPswd.msg, resetPswd.error])\n    return (\n        <div>\n            <div className=\"reset_pswd_box\">\n                <div className=\"reset_pswd_box_container\">\n                    <h1 className=\"reset_pswd_header\">Social Web</h1>\n                    {/* <span style={{color : \"red\", margin : \"5px 0\", textAlign : \"center\", fontSize : \"small\"}}>{authenticatedUser.error}</span> */}\n                    <form className=\"reset_pswd_form\" onSubmit={submitResetPswdHandler}>\n                        \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"New Password\" \n                         type=\"text\" \n                         value={resetPassword}\n                         onChange={(e) => setResetPassword(e.target.value)}\n                        />\n                        <button type=\"submit\" className=\"reset_pswd_btn\">Reset Password</button> \n                        <Link to=\"/\">Go to login</Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPswd\n"]},"metadata":{},"sourceType":"module"}