{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from \"../constants/actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nconst initialState = {\n  _id: \"\",\n  userName: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  posts: [],\n  followers: [],\n  followings: [],\n  email: \"\",\n  error: \"\",\n  loading: true,\n  isAuthenticated: false\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return state.loading;\n\n    case REGISTER_SUCCESS:\n      const registeredUser = action.payload;\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        _id: registeredUser._id,\n        userName: registeredUser.userName,\n        firstName: registeredUser.firstName,\n        lastName: registeredUser.lastName,\n        posts: registeredUser.posts,\n        followings: registeredUser.followings,\n        followers: registeredUser.followers\n      };\n\n    case REGISTER_FAILURE:\n      return { ...state,\n        loading: false,\n        isAuthenticated: false,\n        error: action.payload\n      };\n\n    case LOGIN_REQUEST:\n      return state.loading;\n\n    case LOGIN_SUCCESS:\n      const loggedInUser = jwtDecode(action.payload);\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        _id: loggedInUser._id,\n        userName: loggedInUser.userName,\n        firstName: loggedInUser.firstName,\n        lastName: loggedInUser.lastName,\n        posts: loggedInUser.posts,\n        followings: loggedInUser.followings,\n        followers: loggedInUser.followers,\n        posts: loggedInUser.posts\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        loading: false,\n        isAuthenticated: false,\n        error: action.payload\n      };\n\n    case LOAD_USER_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null,\n        isAuthenticated: false\n      };\n\n    case LOAD_USER_SUCCESS:\n      const user = action.payload;\n      return { ...state,\n        loading: false,\n        error: null,\n        isAuthenticated: true,\n        _id: user._id,\n        userName: user.userName,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        posts: user.posts,\n        followings: user.followings,\n        followers: user.followers,\n        posts: user.posts\n      };\n\n    case LOAD_USER_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false\n      };\n\n    case LOGOUT_REQUEST:\n      return state.loading;\n\n    case LOGOUT_SUCCESS:\n      return action.payload;\n\n    case LOGOUT_FAILURE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/redux/reducers/authReducer.js"],"names":["REGISTER_REQUEST","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","jwtDecode","initialState","_id","userName","firstName","lastName","posts","followers","followings","email","error","loading","isAuthenticated","authReducer","state","action","type","registeredUser","payload","loggedInUser","user"],"mappings":"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","sourcesContent":["import {\n    REGISTER_REQUEST, \n    REGISTER_FAILURE, \n    LOGIN_REQUEST, \n    LOGIN_SUCCESS, \n    LOGIN_FAILURE, \n    REGISTER_SUCCESS, \n    LOGOUT_REQUEST, \n    LOGOUT_SUCCESS, \n    LOGOUT_FAILURE,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAILURE\n} from \"../constants/actionTypes\"\nimport jwtDecode from \"jwt-decode\"\n\nconst initialState = {\n    _id : \"\",\n    userName : \"\",\n    firstName : \"\",\n    lastName : \"\",\n    posts : [],\n    followers : [],\n    followings : [],\n    email : \"\",\n    error : \"\",\n    loading : true,\n    isAuthenticated : false\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case REGISTER_REQUEST:\n            return state.loading;\n\n        case REGISTER_SUCCESS:\n            const registeredUser = action.payload;\n            return {...state, loading : false, isAuthenticated : true, _id : registeredUser._id, userName : registeredUser.userName, firstName : registeredUser.firstName, lastName : registeredUser.lastName, posts : registeredUser.posts, followings : registeredUser.followings, followers : registeredUser.followers};\n\n        case REGISTER_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n        case LOGIN_REQUEST:\n            return state.loading;\n    \n        case LOGIN_SUCCESS:\n            const loggedInUser = jwtDecode(action.payload);\n            return {...state, loading : false, isAuthenticated : true, _id : loggedInUser._id, userName : loggedInUser.userName, firstName : loggedInUser.firstName, lastName : loggedInUser.lastName, posts : loggedInUser.posts, followings : loggedInUser.followings, followers : loggedInUser.followers, posts : loggedInUser.posts};\n            \n        case LOGIN_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n        case LOAD_USER_REQUEST:\n            return {...state, loading : true, error : null, isAuthenticated : false}\n\n        case LOAD_USER_SUCCESS:\n            const user = action.payload;\n            return {...state, loading : false, error : null, isAuthenticated : true, _id : user._id, userName : user.userName, firstName : user.firstName, lastName : user.lastName, posts : user.posts, followings : user.followings, followers : user.followers, posts : user.posts}\n\n        case LOAD_USER_FAILURE:\n            return {...state, loading : false, error : action.payload, user : null, isAuthenticated : false}\n\n        case LOGOUT_REQUEST: \n            return state.loading;\n\n        case LOGOUT_SUCCESS:\n            return action.payload;\n\n        case LOGOUT_FAILURE:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}