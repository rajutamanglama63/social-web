{"ast":null,"code":"import { LOAD_USER_ACCOUNT_REQUEST, LOAD_USER_ACCOUNT_SUCCESS, LOAD_USER_ACCOUNT_FAILURE } from '../constants/actionTypes';\nimport axios from 'axios';\nexport const getOtherIndividualUserAccount = id => async dispatch => {\n  try {\n    try {\n      dispatch({\n        type: LOAD_USER_ACCOUNT_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/user/${id}`);\n      console.log(data.user);\n      dispatch({\n        type: LOAD_USER_ACCOUNT_SUCCESS,\n        payload: data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_USER_ACCOUNT_FAILURE,\n        payload: error.response.data.msg\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/redux/actions/getUserAction.js"],"names":["LOAD_USER_ACCOUNT_REQUEST","LOAD_USER_ACCOUNT_SUCCESS","LOAD_USER_ACCOUNT_FAILURE","axios","getOtherIndividualUserAccount","id","dispatch","type","data","get","console","log","user","payload","error","response","msg"],"mappings":"AAAA,SACIA,yBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,0BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,6BAA6B,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACA,QAAI;AACAA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGP;AADF,OAAD,CAAR;AAIA,YAAM;AAACQ,QAAAA;AAAD,UAAS,MAAML,KAAK,CAACM,GAAN,CAAW,SAAQJ,EAAG,EAAtB,CAArB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AAEAN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGN,yBADF;AAELY,QAAAA,OAAO,EAAGL,IAAI,CAACI;AAFV,OAAD,CAAR;AAKH,KAbD,CAaE,OAAOE,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGL,yBADF;AAELW,QAAAA,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ;AAFzB,OAAD,CAAR;AAIH;AACJ,GApBD,CAoBE,OAAOF,KAAP,EAAc;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CAxBM","sourcesContent":["import {\n    LOAD_USER_ACCOUNT_REQUEST,\n    LOAD_USER_ACCOUNT_SUCCESS,\n    LOAD_USER_ACCOUNT_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\n\nexport const getOtherIndividualUserAccount = (id) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : LOAD_USER_ACCOUNT_REQUEST\n            })\n\n            const {data} = await axios.get(`/user/${id}`)\n            console.log(data.user)\n\n            dispatch({\n                type : LOAD_USER_ACCOUNT_SUCCESS,\n                payload : data.user\n            })\n            \n        } catch (error) {\n            dispatch({\n                type : LOAD_USER_ACCOUNT_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}