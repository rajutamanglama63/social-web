{"ast":null,"code":"var _jsxFileName = \"/home/raju/Web Project/mern/socialPractise/client/src/pages/UpdateProfile/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport \"./updateProfile.css\";\nimport { loadUser } from \"../../redux/actions/authActions\"; // import { userRegistration } from \"../../redux/actions/authActions\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const authenticatedUser = useSelector(state => state.auth);\n  const [updateUserData, setUpdateUserData] = useState({\n    userName: authenticatedUser.userName,\n    email: authenticatedUser.email,\n    lastName: authenticatedUser.lastName,\n    firstName: authenticatedUser.firstName,\n    avatar: null,\n    prevAvatar: authenticatedUser.avatar.url\n  });\n\n  const avatarSelector = e => {\n    const file = e.target.files[0];\n    const Reader = new FileReader();\n    Reader.readAsDataURL(file);\n\n    Reader.onload = () => {\n      // basically FileReader method have 3 \n      // different state and they are initialState = 0, processingState = 1, readyState = 2\n      if (Reader.readyState === 2) {\n        // Reader.result will actually read the url path of pic which we have choose from our machine\n        setUpdateUserData({ ...updateUserData,\n          avatar: Reader.result,\n          prevAvatar: Reader.result\n        });\n      }\n    };\n  };\n\n  const registerHandler = async e => {\n    e.preventDefault(); // await dispatch(userRegistration(newUserData))\n\n    setUpdateUserData({\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      lastName: \"\",\n      firstName: \"\",\n      avatar: null,\n      prevAvatar: null\n    });\n  };\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update_box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update_box_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"update_header\",\n          children: \"Social Web\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"update_info\",\n          children: \"Update Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"update_form\",\n          onSubmit: registerHandler,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"profile_avatar\",\n            src: updateUserData.prevAvatar,\n            sx: {\n              width: \"100px\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            accept: \"image/*\",\n            type: \"file\",\n            onChange: avatarSelector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            placeholder: \"username\",\n            type: \"text\",\n            value: updateUserData.userName,\n            onChange: e => setUpdateUserData({ ...updateUserData,\n              userName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            placeholder: \"firstname\",\n            type: \"text\",\n            value: updateUserData.firstName,\n            onChange: e => setUpdateUserData({ ...updateUserData,\n              firstName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            placeholder: \"lastname\",\n            type: \"text\",\n            value: updateUserData.lastName,\n            onChange: e => setUpdateUserData({ ...updateUserData,\n              lastName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form_input_field\",\n            placeholder: \"email\",\n            type: \"text\",\n            value: updateUserData.email,\n            onChange: e => setUpdateUserData({ ...updateUserData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"update_btn\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProfile, \"Sv6fGfuzV8J/uHoSu69bt5+tuvM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/pages/UpdateProfile/UpdateProfile.js"],"names":["useDispatch","useSelector","useState","useEffect","Avatar","loadUser","UpdateProfile","dispatch","authenticatedUser","state","auth","updateUserData","setUpdateUserData","userName","email","lastName","firstName","avatar","prevAvatar","url","avatarSelector","e","file","target","files","Reader","FileReader","readAsDataURL","onload","readyState","result","registerHandler","preventDefault","password","width","height","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,iCAAzB,C,CACA;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,iBAAiB,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAArC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC;AACjDW,IAAAA,QAAQ,EAAGL,iBAAiB,CAACK,QADoB;AAEjDC,IAAAA,KAAK,EAAGN,iBAAiB,CAACM,KAFuB;AAGjDC,IAAAA,QAAQ,EAAGP,iBAAiB,CAACO,QAHoB;AAIjDC,IAAAA,SAAS,EAAGR,iBAAiB,CAACQ,SAJmB;AAKjDC,IAAAA,MAAM,EAAG,IALwC;AAMjDC,IAAAA,UAAU,EAAGV,iBAAiB,CAACS,MAAlB,CAAyBE;AANW,GAAD,CAApD;;AASA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AAEAG,IAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AAClB;AACA;AACA,UAAGH,MAAM,CAACI,UAAP,KAAsB,CAAzB,EAA2B;AACvB;AAEAjB,QAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBM,UAAAA,MAAM,EAAGQ,MAAM,CAACK,MAApC;AAA4CZ,UAAAA,UAAU,EAAGO,MAAM,CAACK;AAAhE,SAAD,CAAjB;AACH;AACJ,KARD;AAUH,GAhBD;;AAkBA,QAAMC,eAAe,GAAG,MAAOV,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACW,cAAF,GADiC,CAEjC;;AACApB,IAAAA,iBAAiB,CAAC;AACdC,MAAAA,QAAQ,EAAG,EADG;AAEdC,MAAAA,KAAK,EAAG,EAFM;AAGdmB,MAAAA,QAAQ,EAAG,EAHG;AAIdlB,MAAAA,QAAQ,EAAG,EAJG;AAKdC,MAAAA,SAAS,EAAG,EALE;AAMdC,MAAAA,MAAM,EAAG,IANK;AAOdC,MAAAA,UAAU,EAAG;AAPC,KAAD,CAAjB;AASH,GAZD;;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,QAAQ,EAAEwB,eAAxC;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAC,gBAAZ;AAA6B,YAAA,GAAG,EAAEpB,cAAc,CAACO,UAAjD;AAA6D,YAAA,EAAE,EAAE;AAAEgB,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE;AAA1B;AAAjE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,MAAM,EAAC,SAFR;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,QAAQ,EAAEf;AAJX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAQI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,WAAW,EAAC,UAFb;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,KAAK,EAAET,cAAc,CAACE,QAJvB;AAKC,YAAA,QAAQ,EAAGQ,CAAD,IAAOT,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBE,cAAAA,QAAQ,EAAGQ,CAAC,CAACE,MAAF,CAASa;AAAxC,aAAD;AALnC;AAAA;AAAA;AAAA;AAAA,kBARJ,eAeI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,WAAW,EAAC,WAFb;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,KAAK,EAAEzB,cAAc,CAACK,SAJvB;AAKC,YAAA,QAAQ,EAAGK,CAAD,IAAOT,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBK,cAAAA,SAAS,EAAGK,CAAC,CAACE,MAAF,CAASa;AAAzC,aAAD;AALnC;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAsBI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,WAAW,EAAC,UAFb;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,KAAK,EAAEzB,cAAc,CAACI,QAJvB;AAKC,YAAA,QAAQ,EAAGM,CAAD,IAAOT,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBI,cAAAA,QAAQ,EAAGM,CAAC,CAACE,MAAF,CAASa;AAAxC,aAAD;AALnC;AAAA;AAAA;AAAA;AAAA,kBAtBJ,eA6BI;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,WAAW,EAAC,OAFb;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,KAAK,EAAEzB,cAAc,CAACG,KAJvB;AAKC,YAAA,QAAQ,EAAGO,CAAD,IAAOT,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBG,cAAAA,KAAK,EAAGO,CAAC,CAACE,MAAF,CAASa;AAArC,aAAD;AALnC;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eAoCI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CA/FD;;GAAM9B,a;UACeN,W,EACSC,W;;;KAFxBK,a;AAiGN,eAAeA,aAAf","sourcesContent":["import { useDispatch, useSelector} from \"react-redux\"\nimport {useState, useEffect} from 'react'\nimport { Avatar } from '@material-ui/core';\nimport \"./updateProfile.css\"\nimport { loadUser } from \"../../redux/actions/authActions\";\n// import { userRegistration } from \"../../redux/actions/authActions\"\n\nconst UpdateProfile = () => {\n    const dispatch = useDispatch()\n    const authenticatedUser = useSelector(state => state.auth)\n    const [updateUserData, setUpdateUserData] = useState({\n        userName : authenticatedUser.userName,\n        email : authenticatedUser.email,\n        lastName : authenticatedUser.lastName,\n        firstName : authenticatedUser.firstName,\n        avatar : null,\n        prevAvatar : authenticatedUser.avatar.url,\n    })\n\n    const avatarSelector = (e) => {\n        const file = e.target.files[0]\n\n        const Reader = new FileReader()\n        Reader.readAsDataURL(file)\n\n        Reader.onload = () => {\n            // basically FileReader method have 3 \n            // different state and they are initialState = 0, processingState = 1, readyState = 2\n            if(Reader.readyState === 2){\n                // Reader.result will actually read the url path of pic which we have choose from our machine\n\n                setUpdateUserData({...updateUserData, avatar : Reader.result, prevAvatar : Reader.result})\n            }\n        }\n\n    }\n\n    const registerHandler = async (e) => {\n        e.preventDefault()\n        // await dispatch(userRegistration(newUserData))\n        setUpdateUserData({\n            userName : \"\",\n            email : \"\",\n            password : \"\",\n            lastName : \"\",\n            firstName : \"\",\n            avatar : null,\n            prevAvatar : null,\n        })\n    }\n\n    useEffect(() => {\n        dispatch(loadUser())\n    }, [dispatch])\n    return (\n        <div>\n            <div className=\"update_box\">\n                <div className=\"update_box_container\">\n                    <h1 className=\"update_header\">Social Web</h1>\n                    <h3 className=\"update_info\">Update Your Profile</h3>\n                    <form className=\"update_form\" onSubmit={registerHandler}>\n                        <Avatar alt=\"profile_avatar\" src={updateUserData.prevAvatar} sx={{ width: \"100px\", height: \"100px\" }} />\n                        <input \n                         className=\"form_input_field\" \n                         accept=\"image/*\" \n                         type=\"file\" \n                         onChange={avatarSelector}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"username\" \n                         type=\"text\" \n                         value={updateUserData.userName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, userName : e.target.value})}\n                        />\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"firstname\" \n                         type=\"text\" \n                         value={updateUserData.firstName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, firstName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"lastname\" \n                         type=\"text\" \n                         value={updateUserData.lastName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, lastName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"email\" \n                         type=\"text\" \n                         value={updateUserData.email}\n                         onChange={(e) => setUpdateUserData({...updateUserData, email : e.target.value})}\n                        /> \n                        <button type=\"submit\" className=\"update_btn\">Update</button> \n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProfile\n"]},"metadata":{},"sourceType":"module"}