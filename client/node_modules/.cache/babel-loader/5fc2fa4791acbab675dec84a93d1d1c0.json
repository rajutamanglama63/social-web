{"ast":null,"code":"var _jsxFileName = \"/home/raju/Web Project/mern/socialPractise/client/src/pages/UserAccount/UserAccont.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { Cancel } from '@material-ui/icons';\nimport { Dialog } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport Post from \"../../components/Post/Post\";\nimport \"./userAccount.css\"; // import { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\n\nimport Loading from \"../../components/Loading/Loading\";\nimport Users from \"../../components/Users/Users\";\nimport { getOtherIndividualUserPost } from \"../../redux/actions/getUserPostAction\";\nimport { getOtherIndividualUserAccount } from \"../../redux/actions/getUserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  // const navigate = useNavigate()\n  const params = useParams();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const authenticatedUser = useSelector(state => state.auth);\n  const getUserAccount = useSelector(state => state.getUserAccount);\n  const getUserPost = useSelector(state => state.getUserPost);\n  const postLike = useSelector(state => state.likePost);\n  const comment = useSelector(state => state.comment); // const getAllMyPosts = useSelector(state => state.getMyPosts)\n  // const {loading, myPosts} = getAllMyPosts\n\n  const [openFollowersBox, setOpenFollowersBox] = useState(false);\n  const [openFollowingsBox, setOpenFollowingsBox] = useState(false);\n  const [followingUser, setFollowingUser] = useState(false);\n  const [myPersonalProfile, setMyPesonalProfile] = useState(false);\n\n  const followOrUnFollowUser = () => {\n    setFollowingUser(!followingUser);\n  };\n\n  useEffect(() => {\n    dispatch(getOtherIndividualUserAccount(params.id));\n    dispatch(getOtherIndividualUserPost(params.id));\n  }, [dispatch, params.id]);\n  useEffect(() => {\n    if (authenticatedUser._id === params.id) {\n      setMyPesonalProfile(true);\n    }\n\n    if (getUserAccount.user) {\n      getUserAccount.user.followers.forEach(individualFollower => {\n        if (authenticatedUser._id === individualFollower._id) {\n          setFollowingUser(true);\n        } else {\n          setFollowingUser(false);\n        }\n      });\n    }\n  }, [authenticatedUser._id, params.id, getUserAccount.user]);\n  useEffect(() => {\n    if (postLike.error) {\n      alert.error(postLike.error);\n    }\n\n    if (postLike.msg) {\n      alert.success(postLike.msg);\n    }\n\n    if (comment.error) {\n      alert.error(comment.error);\n    }\n\n    if (comment.commentStatusMsg) {\n      alert.success(comment.commentStatusMsg);\n    }\n  }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error]);\n  return getUserAccount.loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 35\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"background_photo\",\n            src: \"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n            alt: \"bg_photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"display_pic\",\n            src: getUserAccount.user.avatar.url,\n            alt: \"dp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full_name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"first_name\",\n            children: getUserAccount.user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"last_name\",\n            children: getUserAccount.user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_property_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"user_info\",\n              children: \"User Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setOpenFollowersBox(true),\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 98\n              }, this), \"  : \", authenticatedUser.followers.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setOpenFollowingsBox(true),\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Followings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 99\n              }, this), \" : \", authenticatedUser.followings.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), myPersonalProfile ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                background: followingUser ? \"red\" : \"\"\n              },\n              onClick: followOrUnFollowUser,\n              className: \"info\",\n              children: followingUser ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Follow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 183\n              }, this) : /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"unFollow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 209\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_post\",\n            children: getUserPost.posts && getUserPost.posts.length > 0 ? getUserPost.posts.map(EachPostOfUser => /*#__PURE__*/_jsxDEV(Post, {\n              post: EachPostOfUser,\n              loading: getUserAccount.loading\n            }, EachPostOfUser._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"User have no post yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openFollowersBox,\n          onClose: () => setOpenFollowersBox(false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dialog_box_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  marginBottom: \"10px\"\n                },\n                children: \"Followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Cancel, {\n                onClick: () => setOpenFollowersBox(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), getUserAccount.user.followers.length > 0 ? getUserAccount.user.followers.map(eachFollower => /*#__PURE__*/_jsxDEV(Users, {\n              userName: eachFollower.userName\n            }, eachFollower._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: \"No follower yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openFollowingsBox,\n          onClose: () => setOpenFollowingsBox(false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dialog_box_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  marginBottom: \"10px\"\n                },\n                children: \"Followings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Cancel, {\n                onClick: () => setOpenFollowingsBox(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), getUserAccount.user.followings.length > 0 ? getUserAccount.user.followings.map(eachFollowing => /*#__PURE__*/_jsxDEV(Users, {\n              userName: eachFollowing.userName\n            }, eachFollowing._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: \"No followings yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Profile, \"TvS95QNd3OxslVUEYqsL+L/FcOQ=\", false, function () {\n  return [useParams, useDispatch, useAlert, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/pages/UserAccount/UserAccont.js"],"names":["useSelector","useDispatch","useParams","Cancel","Dialog","useEffect","useState","useAlert","Post","Loading","Users","getOtherIndividualUserPost","getOtherIndividualUserAccount","Profile","params","dispatch","alert","authenticatedUser","state","auth","getUserAccount","getUserPost","postLike","likePost","comment","openFollowersBox","setOpenFollowersBox","openFollowingsBox","setOpenFollowingsBox","followingUser","setFollowingUser","myPersonalProfile","setMyPesonalProfile","followOrUnFollowUser","id","_id","user","followers","forEach","individualFollower","error","msg","success","commentStatusMsg","loading","avatar","url","firstName","lastName","length","followings","background","posts","map","EachPostOfUser","marginBottom","eachFollower","userName","marginTop","eachFollowing"],"mappings":"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","sourcesContent":["import {useSelector, useDispatch} from \"react-redux\"\nimport { useParams} from 'react-router-dom'\nimport {Cancel} from '@material-ui/icons'\nimport {Dialog} from '@material-ui/core'\nimport {useEffect, useState} from 'react'\nimport {useAlert} from 'react-alert'\nimport Post from \"../../components/Post/Post\"\nimport \"./userAccount.css\"\n// import { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\nimport Loading from \"../../components/Loading/Loading\"\nimport Users from \"../../components/Users/Users\"\nimport { getOtherIndividualUserPost } from \"../../redux/actions/getUserPostAction\"\nimport { getOtherIndividualUserAccount } from \"../../redux/actions/getUserAction\"\n\nconst Profile = () => {\n    // const navigate = useNavigate()\n    const params = useParams()\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const authenticatedUser = useSelector(state => state.auth)\n    const getUserAccount = useSelector(state => state.getUserAccount)\n    const getUserPost = useSelector(state => state.getUserPost)\n    const postLike = useSelector(state => state.likePost)\n    const comment = useSelector(state => state.comment)\n    // const getAllMyPosts = useSelector(state => state.getMyPosts)\n    // const {loading, myPosts} = getAllMyPosts\n\n    const [openFollowersBox, setOpenFollowersBox] = useState(false)\n    const [openFollowingsBox, setOpenFollowingsBox] = useState(false)\n\n    const [followingUser, setFollowingUser] = useState(false)\n    const [myPersonalProfile, setMyPesonalProfile] = useState(false)\n\n    const followOrUnFollowUser = () => {\n        setFollowingUser(!followingUser)\n    }\n    \n\n    useEffect(() => {\n        dispatch(getOtherIndividualUserAccount(params.id))\n        dispatch(getOtherIndividualUserPost(params.id))\n    }, [dispatch, params.id])\n\n    useEffect(() => {\n        if(authenticatedUser._id === params.id) {\n            setMyPesonalProfile(true)\n        }\n\n        if(getUserAccount.user) {\n            getUserAccount.user.followers.forEach((individualFollower) => {\n                if(authenticatedUser._id === individualFollower._id) {\n                    setFollowingUser(true)\n                }else {\n                    setFollowingUser(false)\n                }\n            })\n        }\n    }, [authenticatedUser._id, params.id, getUserAccount.user])\n\n    useEffect(() => {\n        if(postLike.error) {\n            alert.error(postLike.error)\n        }\n        if(postLike.msg){\n            alert.success(postLike.msg)\n        }\n\n        if(comment.error) {\n            alert.error(comment.error)\n        }\n        if(comment.commentStatusMsg){\n            alert.success(comment.commentStatusMsg)\n        }\n        \n    }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error])\n\n    return (\n        getUserAccount.loading ? (<Loading />) : (\n            <div>\n                <div className=\"profile\">\n                    <div className=\"profile_container\">\n                        <div className=\"img_section\">\n                            <img className=\"background_photo\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"bg_photo\" />\n                            <img className=\"display_pic\" src={getUserAccount.user.avatar.url} alt=\"dp\" />\n                        </div>\n                        <div className=\"full_name\">\n                            <span className=\"first_name\">{getUserAccount.user.firstName}</span>\n                            <span className=\"last_name\">{getUserAccount.user.lastName}</span>\n                        </div>\n                        <div className=\"user_property_section\">\n                            <div className=\"user_details\">\n                                <h2 className=\"user_info\">User Information</h2>\n                                <span onClick={() => setOpenFollowersBox(true)} className=\"info\"><strong>Followers</strong>  : {authenticatedUser.followers.length}</span>\n                                <span onClick={() => setOpenFollowingsBox(true)} className=\"info\"><strong>Followings</strong> : {authenticatedUser.followings.length}</span>\n                                {myPersonalProfile ? null : <span style={{ background: followingUser ? \"red\" : \"\" }} onClick={followOrUnFollowUser} className=\"info\">{followingUser ? <strong>Follow</strong> : <strong>unFollow</strong>}</span>}\n                                \n                            </div>\n                            <div className=\"user_post\">\n                                {getUserPost.posts && getUserPost.posts.length > 0 ? getUserPost.posts.map((EachPostOfUser) => (\n                                    <Post key={EachPostOfUser._id} post={EachPostOfUser} loading={getUserAccount.loading} />\n                                )) : <p>User have no post yet.</p>}\n                            </div>\n                        </div>\n                        <Dialog open={openFollowersBox} onClose={() => setOpenFollowersBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followers</h3>\n                                    <Cancel onClick={() => setOpenFollowersBox(false)} />\n                                </div>\n                                \n                                {getUserAccount.user.followers.length > 0 ? (\n                                    getUserAccount.user.followers.map((eachFollower) => (\n                                        <Users key={eachFollower._id} userName={eachFollower.userName} />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No follower yet</p>}\n                                \n                            </div>\n                        </Dialog>\n\n                        <Dialog open={openFollowingsBox} onClose={() => setOpenFollowingsBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followings</h3>\n                                    <Cancel onClick={() => setOpenFollowingsBox(false)} />\n                                </div>\n                                \n                                {getUserAccount.user.followings.length > 0 ? (\n                                    getUserAccount.user.followings.map((eachFollowing) => (\n                                        <Users key={eachFollowing._id} userName={eachFollowing.userName} />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No followings yet</p>}\n                                \n                            </div>\n                        </Dialog>\n                    </div>\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}