{"ast":null,"code":"import { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from \"../constants/actionTypes\";\nimport axios from \"axios\";\nexport const loadUser = () => async dispatch => {\n  try {\n    try {\n      dispatch({\n        type: LOAD_USER_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(\"/user/profile/me\");\n      dispatch({\n        type: LOAD_USER_SUCCESS,\n        payload: data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_USER_FAILURE,\n        payload: error.response.data.msg\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/redux/actions/userAction.js"],"names":["LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","axios","loadUser","dispatch","type","data","get","payload","user","error","response","msg","console","log"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,QAIM,0BAJN;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AACA,QAAI;AACAA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGN;AADF,OAAD,CAAR;AAIA,YAAM;AAACO,QAAAA;AAAD,UAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,kBAAV,CAArB;AAEAH,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGL,iBADF;AAELQ,QAAAA,OAAO,EAAGF,IAAI,CAACG;AAFV,OAAD,CAAR;AAIH,KAXD,CAWE,OAAOC,KAAP,EAAc;AACZN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGJ,iBADF;AAELO,QAAAA,OAAO,EAAGE,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;AAFzB,OAAD,CAAR;AAIH;AACJ,GAlBD,CAkBE,OAAOF,KAAP,EAAc;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;AACJ,CAtBM","sourcesContent":["import{\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAILURE\n}from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : LOAD_USER_REQUEST\n            });\n\n            const {data} = await axios.get(\"/user/profile/me\");\n\n            dispatch({\n                type : LOAD_USER_SUCCESS,\n                payload : data.user\n            })\n        } catch (error) {\n            dispatch({\n                type : LOAD_USER_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}