{"version":3,"sources":["redux/constants/actionTypes.js","redux/reducers/authReducer.js","redux/reducers/postReducer.js","redux/reducers/likePostReducer.js","redux/reducers/commentReducer.js","redux/reducers/allUsersReducer.js","redux/reducers/getMyPostsReducer.js","redux/reducers/addNewPostReducer.js","redux/reducers/deletePostReducer.js","redux/reducers/editPostReducer.js","redux/reducers/updateProfileReducer.js","redux/reducers/changePswdReducer.js","redux/reducers/deleteUserReducer.js","redux/reducers/forgotPasswordReducer.js","redux/reducers/pswdResetReducer.js","redux/reducers/getUserAccountReducer.js","redux/reducers/getUserPostReducer.js","redux/reducers/followOrUnfollowReducer.js","redux/reducers/getMyProfileReducer.js","redux/store.js","redux/actions/authActions.js","pages/Login/Login.js","pages/Register/Register.js","components/Header/Header.js","components/Users/Users.js","redux/actions/allUsersAction.js","components/Sidebar/Sidebar.js","components/Loading/Loading.js","redux/actions/likePostAction.js","redux/actions/postAction.js","redux/actions/commentAction.js","components/CommentCard/CommentCard.js","redux/actions/getMyPostsAction.js","redux/actions/deletePost.js","redux/actions/editPost.js","redux/actions/getUserPostAction.js","components/Post/Post.js","components/Feed/Feed.js","components/Rightbar/Rightbar.js","pages/Home/Home.js","components/Drawer/Drawer.js","pages/Profile/Profile.js","redux/actions/deleteUserAction.js","redux/actions/addNewPost.js","components/AddPost/AddPost.js","redux/actions/udateProfileAction.js","pages/UpdateProfile/UpdateProfile.js","redux/actions/changePswdAction.js","pages/ChangePswd/ChangePswd.js","pages/forgotPassword/ForgotPassword.js","redux/actions/forgotPasswordAction.js","pages/ResetPswd/ResetPswd.js","redux/actions/pswdResetAction.js","redux/actions/getUserAction.js","redux/actions/followOrUnfollowAction.js","pages/UserAccount/UserAccont.js","pages/SearchUser/Search.js","App.js","index.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","PROFILE_REQUEST","PROFILE_SUCCESS","PROFILE_FAILURE","LOAD_USER_ACCOUNT_REQUEST","LOAD_USER_ACCOUNT_SUCCESS","LOAD_USER_ACCOUNT_FAILURE","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","FOLLOW_OR_UNFOLLOW_USER_REQUEST","FOLLOW_OR_UNFOLLOW_USER_SUCCESS","FOLLOW_OR_UNFOLLOW_USER_FAILURE","GET_POST_REQUEST","GET_POST_SUCCESS","GET_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","COMMENT_REQUEST","COMMENT_SUCCESS","COMMENT_FAILURE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","GET_MY_POST_REQUEST","GET_MY_POST_SUCCESS","GET_MY_POST_FAILURE","GET_USER_POST_REQUEST","GET_USER_POST_SUCCESS","GET_USER_POST_FAILURE","ADD_NEW_POST_REQUEST","ADD_NEW_POST_SUCCESS","ADD_NEW_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","EDIT_POST_REQUEST","EDIT_POST_SUCCESS","EDIT_POST_FAILURE","initialState","_id","userName","firstName","lastName","avatar","posts","followers","followings","email","error","msg","loading","isAuthenticated","commentStatusMsg","users","myPosts","success","user","middleware","thunk","reducers","combineReducers","auth","state","action","type","registeredUser","payload","loggedInUser","jwtDecode","likePost","comment","allUsers","getMyPosts","addPost","errro","postDelete","editPost","updateUserProfile","pswdChange","deactivateUser","forgotPassword","resetPswd","getUserAccount","getUserPost","followOrUnfollow","myProfile","store","createStore","composeWithDevTools","applyMiddleware","userRegistration","userData","dispatch","a","axios","post","headers","data","newUser","message","console","log","loadUser","get","response","logout","Login","useDispatch","navigate","useNavigate","alert","useAlert","authenticatedUser","useSelector","useState","password","credentials","setCredentials","useEffect","show","className","style","color","margin","textAlign","fontSize","onSubmit","e","preventDefault","token","placeholder","value","onChange","target","onClick","to","Register","newUserData","setNewUserData","registerHandler","Avatar","alt","src","sx","width","height","accept","file","files","Reader","FileReader","readAsDataURL","onload","readyState","result","Header","open","handleOpen","handleClose","Add","AccountCircle","ExitToApp","Cancel","Menu","Users","userId","userDp","link","allUsersList","name","Sidebar","RssFeed","Chat","PlayCircleFilledOutlined","Group","Bookmark","HelpOutline","WorkOutline","Event","School","map","url","Loading","id","getPostsOfFollowings","commentOnPost","postId","put","header","deleteComment","commentId","delete","CommentCard","postID","username","userIdOfCommenter","commentDeleteHandler","idOfPost","idOfComment","Delete","deletePost","caption","getOtherIndividualUserPost","Post","params","useParams","like","setLike","setComment","postEdit","setPostEdit","openCommentBox","setOpenCommentBox","openLikeBox","setOpenLikeBox","openEditBox","setOpenEditBox","postClass","profile","push","handleLike","commentSubmitHandler","editPostSubmitHandler","deletePostHandler","likes","forEach","item","join","Edit","image","Favorite","FavoriteBorder","length","marginLeft","comments","Forum","Dialog","onClose","required","Button","size","variant","eachComment","marginTop","marginBottom","eachLiker","Feed","Rightbar","Home","postLike","getAllPostsOfFollowing","Drawer","SideDrawerClass","Profile","getAllMyPosts","openFollowersBox","setOpenFollowersBox","openFollowingsBox","setOpenFollowingsBox","deactivateExistingUser","myEachPost","eachFollower","eachFollowing","addNewPost","AddPost","addLatestPost","setAddPost","postSubmitHandler","profileUpdate","updateProfileData","UpdateProfile","prevAvatar","updateUserData","setUpdateUserData","updateProfileHandler","disabled","changePswd","oldPassword","newPassword","ChangePswd","changeThePassword","changePassword","setChangePassword","submitChangePswdHandler","ForgotPassword","setEmail","passwordForgotten","ResetPswd","resetPassword","setResetPassword","getOtherIndividualUserAccount","followOrUnfollowUserUser","UserAccont","followingUser","setFollowingUser","myPersonalProfile","setMyPesonalProfile","followOrUnFollowUser","dispatchFunction","individualFollower","border","position","background","EachPostOfUser","Search","searchTerm","setSearchTerm","App","setOpen","path","element","option","positions","BOTTOM_CENTER","timeout","transition","transitions","SCALE","offset","ReactDOM","render","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.17b5ae03.chunk.js","sourcesContent":["// auth\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\"\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\"\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\n\n\nexport const LOGOUT_REQUEST = \"LOGOUT\"\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\"\n\n// all users\nexport const ALL_USER_REQUEST = \"ALL_USER_REQUEST\"\nexport const ALL_USER_SUCCESS = \"ALL_USER_SUCCESS\"\nexport const ALL_USER_FAILURE = \"ALL_USER_FAILURE\"\n\n// personal user or profile for whole application\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\"\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\"\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\"\n\n// personal profile for specific profile page of app\nexport const PROFILE_REQUEST = \"PROFILE_REQUEST\"\nexport const PROFILE_SUCCESS = \"PROFILE_SUCCESS\"\nexport const PROFILE_FAILURE = \"PROFILE_FAILURE\"\n\n// other user or profile/account\nexport const LOAD_USER_ACCOUNT_REQUEST = \"LOAD_USER_ACCOUNT_REQUEST\"\nexport const LOAD_USER_ACCOUNT_SUCCESS = \"LOAD_USER_ACCOUNT_SUCCESS\"\nexport const LOAD_USER_ACCOUNT_FAILURE = \"LOAD_USER_ACCOUNT_FAILURE\"\n\n// update profile\nexport const UPDATE_PROFILE_REQUEST = \"UPDATE_PROFILE_REQUEST\"\nexport const UPDATE_PROFILE_SUCCESS = \"UPDATE_PROFILE_SUCCESS\"\nexport const UPDATE_PROFILE_FAILURE = \"UPDATE_PROFILE_FAILURE\"\n\n// change password\nexport const CHANGE_PASSWORD_REQUEST = \"CHANGE_PASSWORD_REQUEST\"\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\"\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\"\n\n// forgot password\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\"\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\"\nexport const FORGOT_PASSWORD_FAILURE = \"FORGOT_PASSWORD_FAILURE\"\n\n// reset password\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\"\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\"\nexport const RESET_PASSWORD_FAILURE = \"RESET_PASSWORD_FAILURE\"\n\n// delete user\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\"\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\"\nexport const DELETE_USER_FAILURE = \"DELETE_USER_FAILURE\"\n\n// search user\nexport const SEARCH_USER_REQUEST = \"SEARCH_USER_REQUEST\"\nexport const SEARCH_USER_SUCCESS = \"SEARCH_USER_SUCCESS\"\nexport const SEARCH_USER_FAILURE = \"SEARCH_USER_FAILURE\"\n\n// follow or unfollow user\nexport const FOLLOW_OR_UNFOLLOW_USER_REQUEST = \"FOLLOW_OR_UNFOLLOW_USER_REQUEST\"\nexport const FOLLOW_OR_UNFOLLOW_USER_SUCCESS = \"FOLLOW_OR_UNFOLLOW_USER_SUCCESS\"\nexport const FOLLOW_OR_UNFOLLOW_USER_FAILURE = \"FOLLOW_OR_UNFOLLOW_USER_FAILURE\"\n\n// post\nexport const GET_POST_REQUEST = \"GET_POST_REQUEST\"\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\"\nexport const GET_POST_FAILURE = \"GET_POST_FAILURE\"\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\"\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\"\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\"\n\nexport const COMMENT_REQUEST = \"COMMENT_REQUEST\"\nexport const COMMENT_SUCCESS = \"COMMENT_SUCCESS\"\nexport const COMMENT_FAILURE = \"COMMENT_FAILURE\"\n\nexport const DELETE_COMMENT_REQUEST = \"DELETE_COMMENT_REQUEST\"\nexport const DELETE_COMMENT_SUCCESS = \"DELETE_COMMENT_SUCCESS\"\nexport const DELETE_COMMENT_FAILURE = \"DELETE_COMMENT_FAILURE\"\n\n// get my posts\nexport const GET_MY_POST_REQUEST = \"GET_MY_POST_REQUEST\"\nexport const GET_MY_POST_SUCCESS = \"GET_MY_POST_SUCCESS\"\nexport const GET_MY_POST_FAILURE = \"GET_MY_POST_FAILURE\"\n\n// get user's posts\nexport const GET_USER_POST_REQUEST = \"GET_USER_POST_REQUEST\"\nexport const GET_USER_POST_SUCCESS = \"GET_USER_POST_SUCCESS\"\nexport const GET_USER_POST_FAILURE = \"GET_USER_POST_FAILURE\"\n\nexport const ADD_NEW_POST_REQUEST = \"ADD_NEW_POST_REQUEST\"\nexport const ADD_NEW_POST_SUCCESS = \"ADD_NEW_POST_SUCCESS\"\nexport const ADD_NEW_POST_FAILURE = \"ADD_NEW_POST_FAILURE\"\n\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\"\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\"\nexport const DELETE_POST_FAILURE = \"DELETE_POST_FAILURE\"\n\nexport const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\"\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\"\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\"","import {\n    REGISTER_REQUEST, \n    REGISTER_FAILURE, \n    LOGIN_REQUEST, \n    LOGIN_SUCCESS, \n    LOGIN_FAILURE, \n    REGISTER_SUCCESS, \n    LOGOUT_REQUEST, \n    LOGOUT_SUCCESS, \n    LOGOUT_FAILURE,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAILURE\n} from \"../constants/actionTypes\"\nimport jwtDecode from \"jwt-decode\"\n\nconst initialState = {\n    _id : \"\",\n    userName : \"\",\n    firstName : \"\",\n    lastName : \"\",\n    avatar : null,\n    posts : [],\n    followers : [],\n    followings : [],\n    email : \"\",\n    error : \"\",\n    msg : \"\",\n    loading : true,\n    isAuthenticated : false\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case REGISTER_REQUEST:\n            return state.loading;\n\n        case REGISTER_SUCCESS:\n            const registeredUser = action.payload;\n            return {...state, loading : false, isAuthenticated : true, _id : registeredUser._id, userName : registeredUser.userName, email : registeredUser.email, firstName : registeredUser.firstName, lastName : registeredUser.lastName, avatar : registeredUser.avatar, posts : registeredUser.posts, followings : registeredUser.followings, followers : registeredUser.followers};\n\n        case REGISTER_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n        case LOGIN_REQUEST:\n            return state.loading;\n    \n        case LOGIN_SUCCESS:\n            const loggedInUser = jwtDecode(action.payload);\n            // console.log(loggedInUser)\n            return {...state, loading : false, isAuthenticated : true, _id : loggedInUser._id, email : loggedInUser.email, userName : loggedInUser.userName, avatar : loggedInUser.avatar, firstName : loggedInUser.firstName, lastName : loggedInUser.lastName, posts : loggedInUser.posts, followings : loggedInUser.followings, followers : loggedInUser.followers};\n            \n        case LOGIN_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n        case LOAD_USER_REQUEST:\n            return {...state, loading : true, error : null, isAuthenticated : false}\n\n        case LOAD_USER_SUCCESS:\n            const user = action.payload;\n            return {...state, loading : false, error : null, email : user.email, isAuthenticated : true, _id : user._id, userName : user.userName, firstName : user.firstName, lastName : user.lastName, posts : user.posts, avatar : user.avatar, followings : user.followings, followers : user.followers}\n\n        case LOAD_USER_FAILURE:\n            return {...state, loading : false, error : action.payload, isAuthenticated : false}\n\n        case LOGOUT_REQUEST: \n            return state.loading;\n\n        case LOGOUT_SUCCESS:\n            return {...state, loading : false, msg : action.payload}\n\n        case LOGOUT_FAILURE:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import {\n    GET_POST_REQUEST,\n    GET_POST_SUCCESS,\n    GET_POST_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    posts : []\n}\n\nexport const postReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_POST_REQUEST:\n            return {...state, loading : true};\n        case GET_POST_SUCCESS:\n            return {...state, loading : false, posts : action.payload};\n        case GET_POST_FAILURE:\n            return {...state, loading : false, error : action.payload};\n        default:\n            return state;\n    }\n}","import {\n    LIKE_POST_REQUEST,\n    LIKE_POST_SUCCESS,\n    LIKE_POST_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const likePostReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case LIKE_POST_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case LIKE_POST_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case LIKE_POST_FAILURE:\n            return {...state, loading : false, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    COMMENT_REQUEST,\n    COMMENT_SUCCESS,\n    COMMENT_FAILURE,\n    DELETE_COMMENT_REQUEST,\n    DELETE_COMMENT_SUCCESS,\n    DELETE_COMMENT_FAILURE\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    commentStatusMsg : \"\",\n}\n\nexport const commentReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case COMMENT_REQUEST:\n            return {...state, loading : true, error : null, commentStatusMsg : null};\n        case COMMENT_SUCCESS:\n            return {...state, loading : false, commentStatusMsg : action.payload}\n        case COMMENT_FAILURE:\n            return {...state, loading : false, error : action.payload, commentStatusMsg : null};\n        case DELETE_COMMENT_REQUEST:\n            return {...state, loading : true, error : null, commentStatusMsg : null};\n        case DELETE_COMMENT_SUCCESS:\n            return {...state, loading : false, error : null, commentStatusMsg : action.payload}\n        case DELETE_COMMENT_FAILURE:\n            return {...state, loading : false, error : action.payload, commentStatusMsg : null};\n        default:\n            return state;\n    }\n}","import {\n    ALL_USER_REQUEST, \n    ALL_USER_SUCCESS, \n    ALL_USER_FAILURE, \n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : true,\n    error : \"\",\n    users : []\n}\n\nexport const allUserReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ALL_USER_REQUEST:\n            return {...state, loading : true, error : null, users : []}\n        case ALL_USER_SUCCESS:\n            return {...state, loading : false, error : null, users : action.payload}\n        case ALL_USER_FAILURE:\n            return {...state, loading : false, error : action.payload, users : []}\n        default:\n            return state;\n    }\n}","import {\n    GET_MY_POST_REQUEST,\n    GET_MY_POST_SUCCESS,\n    GET_MY_POST_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : true,\n    error : \"\",\n    myPosts : []\n}\n\nexport const getMyPostsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MY_POST_REQUEST:\n            return {...state, error : null, myPosts : []}\n        case GET_MY_POST_SUCCESS:\n            return {...state, loading : false, error : null, myPosts : action.payload}\n        case GET_MY_POST_FAILURE:\n            return {...state, loading : false, error : action.payload, myPosts : null}\n        default:\n            return state;\n    }\n}","import {\n    ADD_NEW_POST_REQUEST,\n    ADD_NEW_POST_SUCCESS, \n    ADD_NEW_POST_FAILURE,\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\",\n}\n\nexport const addNewPostReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_NEW_POST_REQUEST:\n            return {...state, loading : true, error : null}\n        case ADD_NEW_POST_SUCCESS:\n            return {...state, loading : false, error : null, msg : action.payload}\n        case ADD_NEW_POST_FAILURE:\n            return {...state, errro : action.payload, msg : null}\n        default:\n            return state \n    }\n}","import {\n    DELETE_POST_REQUEST,\n    DELETE_POST_SUCCESS,\n    DELETE_POST_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const deletePostReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case DELETE_POST_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case DELETE_POST_SUCCESS:\n            return {...state, error : null, msg : action.payload}\n        case DELETE_POST_FAILURE:\n            return {...state, error : action.payload, msg : null}\n        default:\n            return state\n    }\n}","import {\n    EDIT_POST_REQUEST,\n    EDIT_POST_SUCCESS,\n    EDIT_POST_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const editPostReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case EDIT_POST_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case EDIT_POST_SUCCESS:\n            return {...state, loading : false, error : null, msg : action.payload}\n        case EDIT_POST_FAILURE:\n            return {...state, loading : true, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const updateProfileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case UPDATE_PROFILE_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case UPDATE_PROFILE_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case UPDATE_PROFILE_FAILURE:\n            return {...state, loading : false, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    CHANGE_PASSWORD_REQUEST,\n    CHANGE_PASSWORD_SUCCESS,\n    CHANGE_PASSWORD_FAILURE\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    success : false,\n    msg : \"\",\n    error : \"\"\n}\n\nexport const changePswdReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CHANGE_PASSWORD_REQUEST:\n            return {...state, loading : true, msg : null, error : null, success : false}\n        case CHANGE_PASSWORD_SUCCESS:\n            return {...state, loading : false, msg : action.payload, success : true, error : null}\n        case CHANGE_PASSWORD_FAILURE:\n            return {...state, loading : false, msg : null, success : false, error : action.payload}\n        default:\n            return state;\n    }\n}","import {\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAILURE\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    msg : \"\",\n    error : \"\"\n}\n\nexport const deleteUserReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case DELETE_USER_REQUEST:\n            return {...state, loading : true, msg : null, error : null}\n        case DELETE_USER_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case DELETE_USER_FAILURE:\n            return {...state, loading : false, msg : null, error : action.payload}\n        default:\n            return state;\n    }\n}","import {\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const forgotPasswordReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FORGOT_PASSWORD_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case FORGOT_PASSWORD_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case FORGOT_PASSWORD_FAILURE:\n            return {...state, loading : false, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const resetPasswordReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case RESET_PASSWORD_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case RESET_PASSWORD_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case RESET_PASSWORD_FAILURE:\n            return {...state, loading : false, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    LOAD_USER_ACCOUNT_REQUEST,\n    LOAD_USER_ACCOUNT_SUCCESS,\n    LOAD_USER_ACCOUNT_FAILURE\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    user : {},\n    error : \"\"\n}\n\nexport const getUserAccountReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case LOAD_USER_ACCOUNT_REQUEST:\n            return {...state, loading : true, user : null, error : null}\n        case LOAD_USER_ACCOUNT_SUCCESS:\n            return {...state, loading : false, user : action.payload, error : null}\n        case LOAD_USER_ACCOUNT_FAILURE:\n            return {...state, loading : false, user : null, error : action.payload}\n        default:\n            return state;\n    }\n}","import {\n    GET_USER_POST_REQUEST,\n    GET_USER_POST_SUCCESS,\n    GET_USER_POST_FAILURE\n} from '../constants/actionTypes'\n\nconst initialState = {\n    loading : false,\n    posts : [],\n    error : \"\"\n}\n\nexport const getUserPostReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USER_POST_REQUEST:\n            return {...state, loading : true, posts : null, error : null}\n        case GET_USER_POST_SUCCESS:\n            return {...state, loading : false, posts : action.payload, error : null}\n        case GET_USER_POST_FAILURE:\n            return {...state, loading : false, posts : null, error : action.payload}\n        default:\n            return state;\n    }\n}","import {\n    FOLLOW_OR_UNFOLLOW_USER_REQUEST,\n    FOLLOW_OR_UNFOLLOW_USER_SUCCESS,\n    FOLLOW_OR_UNFOLLOW_USER_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : false,\n    error : \"\",\n    msg : \"\"\n}\n\nexport const followOrUnfollowReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW_OR_UNFOLLOW_USER_REQUEST:\n            return {...state, loading : true, error : null, msg : null}\n        case FOLLOW_OR_UNFOLLOW_USER_SUCCESS:\n            return {...state, loading : false, msg : action.payload, error : null}\n        case FOLLOW_OR_UNFOLLOW_USER_FAILURE:\n            return {...state, loading : false, error : action.payload, msg : null}\n        default:\n            return state;\n    }\n}","import {\n    PROFILE_REQUEST,\n    PROFILE_SUCCESS,\n    PROFILE_FAILURE\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    loading : true,\n    error : \"\",\n    user : {}\n}\n\nexport const getMyProfileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case PROFILE_REQUEST:\n            return {...state, error : null, user : {}}\n        case PROFILE_SUCCESS:\n            return {...state, loading : false, error : null, user : action.payload}\n        case PROFILE_FAILURE:\n            return {...state, loading : false, error : action.payload, user : null}\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware} from \"redux\"\nimport thunk from \"redux-thunk\"\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport { authReducer } from \"./reducers/authReducer\";\nimport { postReducer } from \"./reducers/postReducer\";\nimport { likePostReducer } from \"./reducers/likePostReducer\";\nimport { commentReducer } from \"./reducers/commentReducer\";\nimport { allUserReducer } from \"./reducers/allUsersReducer\";\nimport { getMyPostsReducer } from \"./reducers/getMyPostsReducer\";\nimport { addNewPostReducer } from \"./reducers/addNewPostReducer\";\nimport { deletePostReducer } from \"./reducers/deletePostReducer\";\nimport { editPostReducer } from \"./reducers/editPostReducer\";\nimport { updateProfileReducer } from \"./reducers/updateProfileReducer\";\nimport { changePswdReducer } from \"./reducers/changePswdReducer\";\nimport { deleteUserReducer } from \"./reducers/deleteUserReducer\";\nimport { forgotPasswordReducer } from \"./reducers/forgotPasswordReducer\";\nimport { resetPasswordReducer } from \"./reducers/pswdResetReducer\";\nimport { getUserAccountReducer } from \"./reducers/getUserAccountReducer\";\nimport { getUserPostReducer } from \"./reducers/getUserPostReducer\";\nimport { followOrUnfollowReducer } from \"./reducers/followOrUnfollowReducer\";\nimport { getMyProfileReducer } from \"./reducers/getMyProfileReducer\";\n// import { searchUserReducer } from \"./reducers/searchUserReducer\";\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n    auth : authReducer,\n    posts : postReducer,\n    likePost : likePostReducer,\n    comment : commentReducer,\n    allUsers : allUserReducer,\n    getMyPosts : getMyPostsReducer,\n    addPost : addNewPostReducer,\n    postDelete : deletePostReducer,\n    editPost : editPostReducer,\n    updateUserProfile : updateProfileReducer,\n    pswdChange : changePswdReducer,\n    deactivateUser : deleteUserReducer,\n    forgotPassword : forgotPasswordReducer,\n    resetPswd : resetPasswordReducer,\n    getUserAccount : getUserAccountReducer,\n    getUserPost : getUserPostReducer,\n    followOrUnfollow : followOrUnfollowReducer,\n    myProfile : getMyProfileReducer,\n    // search : searchUserReducer,\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import {\n    REGISTER_REQUEST, \n    REGISTER_FAILURE, \n    LOGIN_REQUEST, \n    LOGIN_SUCCESS, \n    LOGIN_FAILURE, \n    REGISTER_SUCCESS, \n    LOGOUT_REQUEST, \n    LOGOUT_SUCCESS, \n    LOGOUT_FAILURE,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const userRegistration = (userData) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : REGISTER_REQUEST\n            });\n    \n            const {data} = await axios.post(\"/auth/register\", userData, {headers : {\"Content-Type\" : \"application/json\"}});\n            \n    \n            dispatch({\n                type : REGISTER_SUCCESS,\n                payload : data.newUser\n            });\n        } catch (error) {\n            dispatch({\n                type : REGISTER_FAILURE,\n                payload : error.message\n            });\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        // this wired nested trycatch block is use here to avoid type error\n        try {\n            dispatch({\n                type : LOGIN_REQUEST,\n            });\n    \n            const {data} = await axios.post(\"/auth/login\", {email, password}, {headers : {\"Content-Type\" : \"application/json\"}});\n    \n            dispatch({\n                type : LOGIN_SUCCESS,\n                payload : data.token\n            });\n        } catch (error) {\n            dispatch({\n                type : LOGIN_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : LOAD_USER_REQUEST\n            });\n\n            const {data} = await axios.get(\"/user/profile/me\");\n\n            dispatch({\n                type : LOAD_USER_SUCCESS,\n                payload : data.user\n            })\n        } catch (error) {\n            dispatch({\n                type : LOAD_USER_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const logout = () => async (dispatch) => {\n    try {\n        dispatch({\n            type : LOGOUT_REQUEST\n        });\n\n        const {data} = await axios.get(\"/auth/logout\");\n\n        dispatch({\n            type : LOGOUT_SUCCESS,\n            payload : data.msg\n        })\n    } catch (error) {\n        console.log(error);\n        dispatch({\n            type : LOGOUT_FAILURE,\n            payload : error.message\n        })\n    }\n}","import { Link, useNavigate } from \"react-router-dom\"\nimport {useState, useEffect} from \"react\"\nimport {useAlert} from 'react-alert'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {login} from \"../../redux/actions/authActions\"\nimport \"./login.css\"\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const alert = useAlert()\n    const authenticatedUser = useSelector(state => state.auth)\n    const [credentials, setCredentials] = useState({\n        email : \"\",\n        password : \"\"\n    });\n\n    const navigateToForgotPswdPage = () => {\n        navigate(\"/forgot/password\")\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(credentials.email, credentials.password));\n        setCredentials({\n            email : \"\",\n            password : \"\"\n        });\n    }\n\n    useEffect(() => {\n        if(authenticatedUser.msg){\n            alert.show(authenticatedUser.msg)\n        }\n    }, [alert, authenticatedUser.msg])\n\n    return (\n        <div>\n            <div className=\"login_box\">\n                <div className=\"login_box_container\">\n                    <h1 className=\"login_header\">Social Web</h1>\n                    <span style={{color : \"red\", margin : \"5px 0\", textAlign : \"center\", fontSize : \"small\"}}>{authenticatedUser.error}</span>\n                    <form className=\"login_form\" onSubmit={submitHandler}>\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"email\" \n                         type=\"text\" \n                         value={credentials.email}\n                         onChange={(e) => setCredentials({...credentials, email : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"password\" \n                         type=\"text\" \n                         value={credentials.password}\n                         onChange={(e) => setCredentials({...credentials, password : e.target.value})}\n                        />\n                        <button type=\"submit\" className=\"login_btn\">Login</button> \n                        <p onClick={navigateToForgotPswdPage} className=\"forgot_password\">Forgot Password?</p>\n                    </form>\n                </div>\n                <div className=\"register_link_box\">\n                    <p>Don't have an account? <Link to=\"/register\" className=\"register_link\">Register</Link></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import {Link} from \"react-router-dom\"\nimport {useDispatch} from \"react-redux\"\nimport {useState} from 'react'\nimport { Avatar } from '@material-ui/core';\nimport \"./register.css\"\nimport { userRegistration } from \"../../redux/actions/authActions\"\n\nconst Register = () => {\n    const dispatch = useDispatch()\n    const [newUserData, setNewUserData] = useState({\n        userName : \"\",\n        email : \"\",\n        password : \"\",\n        lastName : \"\",\n        firstName : \"\",\n        avatar : null,\n    })\n\n    const avatarSelector = (e) => {\n        const file = e.target.files[0]\n\n        const Reader = new FileReader()\n        Reader.readAsDataURL(file)\n\n        Reader.onload = () => {\n            // basically FileReader method have 3 \n            // different state and they are initialState = 0, processingState = 1, readyState = 2\n            if(Reader.readyState === 2){\n                // Reader.result will actually read the url path of pic which we have choose from our machine\n                setNewUserData({...newUserData, avatar : Reader.result})\n            }\n        }\n\n    }\n\n    const registerHandler = async (e) => {\n        e.preventDefault()\n        await dispatch(userRegistration(newUserData))\n        setNewUserData({\n            userName : \"\",\n            email : \"\",\n            password : \"\",\n            lastName : \"\",\n            firstName : \"\",\n            avatar : null,\n        })\n    }\n    return (\n        <div>\n            <div className=\"register_box\">\n                <div className=\"register_box_container\">\n                    <h1 className=\"register_header\">Social Web</h1>\n                    <h3 className=\"register_info\">Sign up to share your thoughts and photos</h3>\n                    <form className=\"register_form\" onSubmit={registerHandler}>\n                        <Avatar alt=\"profile_avatar\" src={newUserData.avatar} sx={{ width: \"100px\", height: \"100px\" }} />\n                        <input \n                         className=\"form_input_field\" \n                         accept=\"image/*\" \n                         type=\"file\" \n                         onChange={avatarSelector}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"username\" \n                         type=\"text\" \n                         value={newUserData.userName}\n                         onChange={(e) => setNewUserData({...newUserData, userName : e.target.value})}\n                        />\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"firstname\" \n                         type=\"text\" \n                         value={newUserData.firstName}\n                         onChange={(e) => setNewUserData({...newUserData, firstName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"lastname\" \n                         type=\"text\" \n                         value={newUserData.lastName}\n                         onChange={(e) => setNewUserData({...newUserData, lastName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"email\" \n                         type=\"text\" \n                         value={newUserData.email}\n                         onChange={(e) => setNewUserData({...newUserData, email : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"password\" \n                         type=\"text\" \n                         value={newUserData.password}\n                         onChange={(e) => setNewUserData({...newUserData, password : e.target.value})}\n                        />\n                        <button type=\"submit\" className=\"register_btn\">Register</button> \n                        <p className=\"assuring\">By signing up, you agree with our Terms, Data, Policy and Privacy policy</p>\n                    </form>\n                </div>\n                <div className=\"link_box\">\n                    <p>Have an account? <Link to=\"/\" className=\"login_link\">Login</Link></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n","import \"./header.css\"\nimport {Link} from \"react-router-dom\"\nimport {useDispatch} from \"react-redux\"\nimport {logout} from \"../../redux/actions/authActions\"\nimport {Home, Add, Search, AccountCircle, ExitToApp, Menu, Cancel, } from '@material-ui/icons'\n// import Drawer from \"../Drawer/Drawer\"\n\nconst Header = ({open, handleOpen, handleClose}) => {\n    const dispatch = useDispatch()\n    // const navigate = useNavigate();\n    // const navigateProfile = () => {\n    //     navigate(\"/profile\")\n    // }\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n    return (\n        <div>\n            <div className=\"navbar\">\n                <div className=\"navbar_container\">\n                    <div className=\"navbar_left\">\n                        <h3 className=\"logo\">Social Web</h3>\n                    </div>\n                    <div className=\"navbar_center\">\n                        <ul className=\"navbar_list\">\n                            <li className=\"navbar_list_item\">\n                                <Link to=\"/\">\n                                    <Home fontSize=\"medium\" className=\"navbar_icon\" />\n                                </Link>\n                            </li>\n                            <li className=\"navbar_list_item\">\n                                <Link to=\"/add\">\n                                    <Add fontSize=\"medium\" className=\"navbar_icon\" />\n                                </Link>\n                            </li>\n                            <li className=\"navbar_list_item\">\n                                <Link to=\"/search\">\n                                    <Search fontSize=\"medium\" className=\"navbar_icon\" />\n                                </Link>\n                            </li>\n                            <li className=\"navbar_list_item\">\n                                <Link to=\"/profile\">\n                                    <AccountCircle fontSize=\"medium\" className=\"navbar_icon\" />\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"navbar_right\">\n                        <div className=\"user\" onClick={logoutHandler}>\n                            {/* <img src=\"https://images.pexels.com/photos/11389730/pexels-photo-11389730.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" className=\"user_pic\" alt=\"user_pic\" /> */}\n                            <p className=\"username\">Logout</p>\n                            <span className=\"logout\"><ExitToApp fontSize=\"medium\" /></span>\n                        </div>\n                        <div className=\"hamburger_menubar\">\n                        {/* <Menu fontSize=\"large\" onClick={handleOpen}/> */}\n                            {!open ? (\n                                        <>\n                                            <Menu fontSize=\"large\" onClick={handleOpen}/>\n                                        </>\n                                    ) : (\n                                            <>\n                                                <Cancel onClick={handleClose} />\n                                            </>\n                                        )\n                            }\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import { Link} from 'react-router-dom'\nimport {Avatar} from '@material-ui/core'\nimport './users.css'\n\nconst Users = ({userName, userId, userDp}) => {\n    const link = `/user/${userId}`\n    return (\n        <div>\n            <div className=\"user\" >\n                <Link to={link} className=\"link_to_profile\">\n                <Avatar style={{width: \"32px\", height: \"32px\"}} alt=\"profile_avatar\" src={userDp}  />\n                    {/* {userDp ? (\n                                        <Avatar style={{width: \"32px\", height: \"32px\"}} alt=\"profile_avatar\" src={userDp}  />\n                                    ) : (\n                                        <img className=\"display_pic\" src=\"https://images.pexels.com/photos/2872667/pexels-photo-2872667.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"dp\" /> \n                                    )\n                    } */}\n                    {/* <img className=\"picture\" src=\"https://images.pexels.com/photos/2872667/pexels-photo-2872667.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"jhalak\" /> */}\n                    <span className=\"user_name\">{userName}</span>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import {\n    ALL_USER_REQUEST,\n    ALL_USER_SUCCESS, \n    ALL_USER_FAILURE,\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\nexport const allUsersList = (name = \"\") => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : ALL_USER_REQUEST\n            })\n\n            const {data} = await axios.get(`/user/users?userName=${name}`)\n            console.log(data)\n\n            dispatch({\n                type : ALL_USER_SUCCESS,\n                payload : data.users\n            })\n        } catch (error) {\n            dispatch({\n                type : ALL_USER_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n","import {RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School} from '@material-ui/icons'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useEffect} from 'react'\nimport Users from '../Users/Users'\nimport { allUsersList } from '../../redux/actions/allUsersAction'\nimport \"./sidebar.css\"\n\nconst Sidebar = () => {\n    const dispatch = useDispatch()\n    const allUsers = useSelector(state => state.allUsers)\n\n\n    useEffect(() => {\n        dispatch(allUsersList());\n    }, [dispatch])\n    return (\n        <div>\n            <div className=\"sidebar\">\n                <div className=\"sidebar_wrapper\">\n                    <ul className=\"sidebar_list\">\n                        <li className=\"sidebar_list_item\">\n                            <RssFeed className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Feed</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <Chat className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Chat</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <PlayCircleFilledOutlined className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Video</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <Group className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Groups</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <Bookmark className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Bookmarks</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <HelpOutline className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Questions</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <WorkOutline className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Jobs</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <Event className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">Events</span>\n                        </li>\n                        <li className=\"sidebar_list_item\">\n                            <School className=\"sidebar_icon\" />\n                            <span className=\"sidebar_list_item_name\">School</span>\n                        </li>\n                    </ul>\n                    <hr className=\"horizantal_line\" />\n                    <span className=\"friend_list\">All Users</span>\n                    {allUsers.loading === false ? allUsers.users.map((user) => (\n                                <Users key={user._id} userId={user._id} userName={user.userName} userDp={user.avatar ? user.avatar.url : null} />\n                    )) : <span>No user to show</span>}\n                    \n                    {/* <ul className=\"sidebar_friend_list\">\n                        {allUsers.loading === false ? allUsers.users.map((user) => (\n                            <li className=\"sidebar_friend_list_item\" key={user._id} onClick={() => navigateToProfile(user._id)}>\n                                <Users userName={user.userName} />\n                            </li>\n                        )) : <span>No user to show</span>}\n                    </ul> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import \"./loading.css\"\n\nconst Loading = () => {\n    return (\n        <div>\n            <h2 className=\"loading\">Loading...</h2>\n        </div>\n    )\n}\n\nexport default Loading\n","import {\n    LIKE_POST_REQUEST,\n    LIKE_POST_SUCCESS,\n    LIKE_POST_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        try {\n           dispatch({\n               type : LIKE_POST_REQUEST\n           }) \n\n           const {data} = await axios.get(`/post/${id}`)\n\n           dispatch({\n               type : LIKE_POST_SUCCESS,\n               payload : data.msg\n           })\n        } catch (error) {\n            dispatch({\n                type : LIKE_POST_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}","import {\n    GET_POST_REQUEST,\n    GET_POST_SUCCESS,\n    GET_POST_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const getPostsOfFollowings = () => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : GET_POST_REQUEST,\n            });\n\n            // fetching posts of people whom we have followed\n            const {data} = await axios.get(\"/user/getPostOfFollowings\");\n\n            dispatch({\n                type : GET_POST_SUCCESS,\n                payload : data.posts\n            })\n        } catch (error) {\n            dispatch({\n                type : GET_POST_FAILURE,\n                payload : error.response.data\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n","import {\n    COMMENT_REQUEST,\n    COMMENT_SUCCESS,\n    COMMENT_FAILURE,\n    DELETE_COMMENT_REQUEST,\n    DELETE_COMMENT_SUCCESS,\n    DELETE_COMMENT_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\n\nexport const commentOnPost = (postId, comment) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : COMMENT_REQUEST,\n            })\n\n            const {data} = await axios.put(`/post/comment/${postId}`, {comment}, {header : {\"content-type\" : \"application/json\"}})\n\n            dispatch({\n                type : COMMENT_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : COMMENT_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\nexport const deleteComment = (id, commentId) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : DELETE_COMMENT_REQUEST\n            });\n\n            const {data} = await axios.delete(`/post/delete/comment/${id}`, {commentId})\n            console.log(data)\n\n            dispatch({\n                type : DELETE_COMMENT_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : DELETE_COMMENT_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}","import { Delete } from '@material-ui/icons'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { deleteComment } from '../../redux/actions/commentAction'\nimport { getPostsOfFollowings } from '../../redux/actions/postAction'\nimport './commentCard.css'\n\nconst CommentCard = ({commentId, postID, comment, username, userIdOfCommenter}) => {\n    const auth = useSelector(state => state.auth)\n    const dispatch = useDispatch()\n\n    const commentDeleteHandler = async (idOfPost, idOfComment) => {\n        await dispatch(deleteComment(idOfPost, idOfComment))\n        dispatch(getPostsOfFollowings())\n    }\n    \n    return (\n        <div>\n            <div className=\"comment_card\">\n                <div className=\"commenter_comment\">\n                    <div className=\"identity_section\">\n                        <img src=\"https://images.pexels.com/photos/11341064/pexels-photo-11341064.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" className=\"commenter_dp\" alt=\"dp\" />\n                        <span className=\"commenter_name\">{username}</span>\n                        {auth._id === userIdOfCommenter ? (\n                            <Delete onClick={() => commentDeleteHandler(postID, commentId)} style={{color : \"red\"}} fontSize=\"small\" />\n                        ) : null}\n                    </div>\n                    <span className=\"comment_text\">{comment}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentCard\n","import {\n    GET_MY_POST_REQUEST,\n    GET_MY_POST_SUCCESS,\n    GET_MY_POST_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const getMyPosts = () => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : GET_MY_POST_REQUEST\n            })\n\n            const {data} = await axios.get(\"/user/getMyPosts\")\n\n            dispatch({\n                type : GET_MY_POST_SUCCESS,\n                payload : data.posts\n            })\n        } catch (error) {\n            dispatch({\n                type : GET_MY_POST_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import {\n    DELETE_POST_REQUEST,\n    DELETE_POST_SUCCESS,\n    DELETE_POST_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : DELETE_POST_REQUEST,\n            })\n\n            const {data} = await axios.delete(`/post/delete/${id}`)\n\n            dispatch({\n                type : DELETE_POST_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : DELETE_POST_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import {\n    EDIT_POST_REQUEST,\n    EDIT_POST_SUCCESS,\n    EDIT_POST_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const editPost = (caption, id) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : EDIT_POST_REQUEST\n            })\n\n            const {data} = await axios.put(`/post/update/caption/${id}`, {caption}, {headers : {\"contentType\" : \"application/json\"}})\n\n            dispatch({\n                type : EDIT_POST_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : EDIT_POST_FAILURE,\n                payload : error.data.response.msg\n            })\n        }\n    } catch (error) {\n        console(error)\n    }\n}","import {\n    GET_USER_POST_REQUEST,\n    GET_USER_POST_SUCCESS,\n    GET_USER_POST_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\n\nexport const getOtherIndividualUserPost = (id) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : GET_USER_POST_REQUEST\n            })\n\n            const {data} = await axios.get(`/user/userPost/${id}`)\n\n            dispatch({\n                type : GET_USER_POST_SUCCESS,\n                payload : data.posts\n            })\n            \n        } catch (error) {\n            dispatch({\n                type : GET_USER_POST_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import { Delete, Edit, FavoriteBorder, Favorite, Forum , Cancel} from '@material-ui/icons'\nimport {Dialog, Button} from '@material-ui/core'\nimport {useParams} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useState, useEffect} from 'react'\n\nimport \"./post.css\"\nimport { likePost } from '../../redux/actions/likePostAction'\nimport { getPostsOfFollowings } from '../../redux/actions/postAction'\nimport { commentOnPost} from '../../redux/actions/commentAction'\nimport CommentCard from '../CommentCard/CommentCard'\nimport Users from '../Users/Users'\nimport { getMyPosts } from '../../redux/actions/getMyPostsAction'\nimport { deletePost } from '../../redux/actions/deletePost'\nimport { editPost } from '../../redux/actions/editPost'\nimport { getOtherIndividualUserPost } from '../../redux/actions/getUserPostAction'\n\n\nconst Post = ({post}) => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    const authenticatedUser = useSelector(state => state.auth)\n    const [like, setLike] = useState(false)\n    const [comment, setComment] = useState(\"\")\n    const [postEdit, setPostEdit] = useState(post.caption)\n    const [openCommentBox, setOpenCommentBox] = useState(false)\n    const [openLikeBox, setOpenLikeBox] = useState(false)\n    const [openEditBox, setOpenEditBox] = useState(false)\n    const postClass = [\"post\"];\n\n    if(params.profile) {\n        postClass.push(\"profile_post\");\n    }\n\n    const handleLike = async () => {\n        setLike(!like);\n        await dispatch(likePost(post._id))\n        \n        if(authenticatedUser._id){\n            dispatch(getMyPosts())\n        }\n        \n        if(authenticatedUser._id !== post._id){\n            dispatch(getPostsOfFollowings())\n        }\n\n        if(authenticatedUser._id !== post._id){\n            dispatch(getOtherIndividualUserPost())\n        }\n    }\n\n    const commentSubmitHandler = async (e) => {\n        e.preventDefault()\n        await dispatch(commentOnPost(post._id, comment))\n        dispatch(getPostsOfFollowings())\n        setComment(\"\")\n    }\n\n    const editPostSubmitHandler = async (e) => {\n        e.preventDefault()\n        await dispatch(editPost(postEdit, post._id))\n        dispatch(getMyPosts())\n    }\n\n    const deletePostHandler = async (id) => {\n        await dispatch(deletePost(id))\n        dispatch(getMyPosts())\n    }\n\n\n    useEffect(() => {\n        post.likes.forEach(item => {\n            if(authenticatedUser._id === item._id) {\n                setLike(true);\n            }\n        });\n    }, [authenticatedUser._id, post.likes]) \n\n    return (\n        <div>\n            <div className={postClass.join(\" \")}>\n                <div className=\"post_wrapper\">\n                    <div className=\"post_top\">\n                        <div className=\"post_top_left_corner\">\n                            <img className=\"user_photo\" src={post.user.avatar.url} alt=\"user_photo\" />\n                            <span className=\"user_fullname\">{post.user.userName}</span>\n                        </div>\n                        {authenticatedUser._id === post.user._id ? (\n                            <div className=\"post_top_right_corner\">\n                                <Edit onClick={() => setOpenEditBox(true)} fontSize=\"small\" />\n                                <Delete onClick={() => deletePostHandler(post._id)} fontSize=\"small\" color=\"secondary\" />\n                            </div>\n                        ) : null}\n                        \n                    </div>\n                    <div className=\"post_center\">\n                        <span className=\"caption\">{post.caption}</span>\n                        <img className=\"post_picture\" src={post.image.url} alt=\"post_picture\" />\n                    </div>\n                    <div className=\"post_bottom\">\n                        <div className=\"post_bottom_left_corner\">\n                            <div className=\"like\" onClick={handleLike}>\n                                {like ? <Favorite fontSize=\"small\" style={{color : \"red\"}}/> : <FavoriteBorder fontSize=\"small\" />}\n                                \n                            </div>\n                            <span className=\"like_count\" onClick={() => setOpenLikeBox(true)}>{post.likes.length} {post.likes.length > 1 ? (<p style={{marginLeft : \"5px\"}}>Likes</p>) : (<p style={{marginLeft : \"5px\"}}>Like</p>)}</span>\n                        </div>\n                        <div className=\"post_bottom_right_corner\">\n                            <div className=\"comment\">\n                                <span className=\"comment_count\">{post.comments.length}</span>\n                                <Forum fontSize=\"small\" onClick={() => setOpenCommentBox(true)} />\n                            </div>\n                        </div>\n                    </div>\n                    <Dialog open={openCommentBox} onClose={() => setOpenCommentBox(false)}>\n                        <div className=\"dialog_box\">\n                            <div className=\"dialog_box_header\">\n                                <h3>Comments</h3>\n                                <Cancel onClick={() => setOpenCommentBox(false)} />\n                            </div>\n                            <form onSubmit={commentSubmitHandler}>\n                                <input \n                                    type=\"text\" \n                                    className=\"form_input_field\" \n                                    placeholder=\"enter your comment...\" \n                                    required\n                                    value={comment} \n                                    onChange={(e) => setComment(e.target.value)}\n                                />\n                                <Button type=\"submit\" color=\"secondary\" size=\"small\" variant=\"contained\">Add</Button>\n                            </form>\n                            {post.comments.length > 0 ? (\n                                post.comments.map((eachComment) => (\n                                    <CommentCard key={eachComment._id} postID={post._id} commentId={eachComment._id} comment={eachComment.comment} username={eachComment.user.userName} userIdOfCommenter={eachComment.user._id} />\n                                ))\n                            ) : <p style={{marginTop : \"10px\"}}>No comment yet</p>}\n                            \n                        </div>\n                    </Dialog>\n\n                    {/* dialog box for viewing likers */}\n                    <Dialog open={openLikeBox} onClose={() => setOpenLikeBox(false)}>\n                        <div className=\"dialog_box\">\n                            <div className=\"dialog_box_header\">\n                                <h3 style={{marginBottom : \"10px\"}}>People who like this post</h3>\n                                <Cancel onClick={() => setOpenLikeBox(false)} />\n                            </div>\n                            \n                            {post.likes.length > 0 ? (\n                                post.likes.map((eachLiker) => (\n                                    <Users key={eachLiker._id} userName={eachLiker.userName} />\n                                ))\n                            ) : <p style={{marginTop : \"10px\"}}>No likes yet</p>}\n                            \n                        </div>\n                    </Dialog>\n\n                     {/* dialog box for editing post */}\n                     <Dialog open={openEditBox} onClose={() => setOpenEditBox(false)}>\n                        <div className=\"dialog_box\">\n                            <div className=\"dialog_box_header\">\n                                <h3 style={{marginBottom : \"10px\"}}>Edit Post</h3>\n                                <Cancel onClick={() => setOpenEditBox(false)} />\n                            </div>\n                            <form onSubmit={editPostSubmitHandler}>\n                                <input \n                                 className=\"form_input_field\" \n                                 placeholder=\"caption\" \n                                 type=\"text\" \n                                 value={postEdit}\n                                 onChange={(e) => setPostEdit(e.target.value)}\n                                />\n                                <Button type=\"submit\" color=\"secondary\" size=\"small\" variant=\"contained\">Edit</Button>\n                            </form>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Post\n","import Loading from \"../Loading/Loading\"\nimport Post from \"../Post/Post\"\nimport \"./feed.css\"\n\nconst Feed = ({posts, loading}) => {\n    return loading ? (<Loading />) : (\n            <div>\n                <div className=\"feed\">\n                    {posts && posts.length > 0 ? posts.map((post) => (\n                        <Post key={post._id} post={post} />\n                    )) : <div className=\"feed\">No posts yet</div>}\n                </div>\n            </div>\n        )\n}\n\nexport default Feed\n","import \"./rightbar.css\"\n\nconst Rightbar = () => {\n    return (\n        <div>\n            <div className=\"rightbar\">\n                <div className=\"notificaton_wrapper\">\n                    <span className=\"notifaction\"><strong>Hari</strong> and <strong>2 other</strong> have birthday today.</span>\n                    <span className=\"notifaction\"><b>Pawan</b> likes your post.</span>\n                    <span className=\"notifaction\"><b>Sabitri</b> started following you.</span>\n                    \n                </div>\n                <button className=\"show_more_btn\">Show More</button>\n                {/* <Button size=\"small\" color=\"secondary\" variant=\"contained\" >Show More</Button> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Rightbar\n","import Sidebar from \"../../components/Sidebar/Sidebar\"\nimport Feed from \"../../components/Feed/Feed\"\nimport Rightbar from \"../../components/Rightbar/Rightbar\"\nimport { getPostsOfFollowings } from \"../../redux/actions/postAction\"\nimport \"./home.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useAlert} from 'react-alert'\nimport {useEffect} from \"react\"\n// import { loadUser } from \"../../redux/actions/userAction\"\n\nconst Home = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    \n    const postLike = useSelector(state => state.likePost)\n    const comment = useSelector(state => state.comment)\n    // we are collecting all posts of people whom we have followed\n    const getAllPostsOfFollowing = useSelector(state => state.posts)\n    const {posts, loading} = getAllPostsOfFollowing;\n\n\n\n    useEffect(() => {\n        dispatch(getPostsOfFollowings());\n    }, [dispatch])\n\n    useEffect(() => {\n        if(postLike.error) {\n            alert.error(postLike.error)\n        }\n        if(postLike.msg){\n            alert.show(postLike.msg)\n        }\n\n        if(comment.error) {\n            alert.error(comment.error)\n        }\n        if(comment.commentStatusMsg){\n            alert.show(comment.commentStatusMsg)\n        }\n\n    }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error])\n\n\n    return (\n        <div>\n            <div className=\"home\">\n                <div className=\"home_container\">\n                    <Sidebar />\n                    <Feed posts={posts} loading={loading} />\n                    {/* {posts && posts.length === 0 ? (<div className=\"feed\">No posts yet</div>) : <Feed posts={posts} />} */}\n                    <Rightbar />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import {Home, Add, Search, AccountCircle, ExitToApp, Cancel, } from '@material-ui/icons'\nimport \"./drawer.css\"\n\nconst Drawer = ({open, handleClose}) => {\n    const SideDrawerClass = [\"side-drawer\"];\n\n    if(open) {\n        SideDrawerClass.push(\"show\");\n    }\n    return (\n        <div>\n            <div className={SideDrawerClass.join(\" \")}>\n                {/* <Drawer anchor=\"right\" variant=\"persistent\" open={open} hideBackdrop=\"true\"> */}\n                    <ul className=\"drawer_list\">\n                    \n                        <li className=\"drawer_list_item\">\n                            <AccountCircle className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Add content</span>\n                        </li>\n                        <li className=\"drawer_list_item\">\n                            <Home className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Home</span>\n                        </li>\n                        <li className=\"drawer_list_item\">\n                            <Add className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Add content</span>\n                        </li>\n                        <li className=\"drawer_list_item\">\n                            <Search className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Search</span>\n                        </li>\n                        <li className=\"drawer_list_item\">\n                            <ExitToApp className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Logout</span>\n                        </li>\n                        <li className=\"drawer_list_item\">\n                            <Search className=\"drawer_list\" />\n                            <span className=\"drawer_list_item_name\">Search</span>\n                        </li>\n                        <li className=\"drawer_list_item\" onClick={handleClose} >\n                            <Cancel className=\"drawer_list\"/>\n                            <span className=\"drawer_list_item_name\">Cancel</span>\n                        </li>\n                    </ul>\n                {/* </Drawer> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Drawer\n","import {useSelector, useDispatch} from \"react-redux\"\nimport {useNavigate} from 'react-router-dom'\nimport {Cancel} from '@material-ui/icons'\nimport {Dialog} from '@material-ui/core'\nimport {useEffect, useState} from 'react'\nimport {useAlert} from 'react-alert'\nimport Post from \"../../components/Post/Post\"\nimport \"./profile.css\"\nimport { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\nimport Loading from \"../../components/Loading/Loading\"\nimport Users from \"../../components/Users/Users\"\nimport { deleteUser } from \"../../redux/actions/deleteUserAction\"\nimport { logout } from \"../../redux/actions/authActions\"\n\nconst Profile = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const authenticatedUser = useSelector(state => state.auth)\n    // const profile = useSelector(state => state.myProfile)\n\n    const updateUserProfile = useSelector(state => state.updateUserProfile)\n    const postLike = useSelector(state => state.likePost)\n    const comment = useSelector(state => state.comment)\n    const postDelete = useSelector(state => state.postDelete)\n    const editPost = useSelector(state => state.editPost)\n    const getAllMyPosts = useSelector(state => state.getMyPosts)\n    // const profile = useSelector(state => state.myProfile)\n    const deactivateUser = useSelector(state => state.deactivateUser)\n    const {loading, myPosts} = getAllMyPosts\n\n    const [openFollowersBox, setOpenFollowersBox] = useState(false)\n    const [openFollowingsBox, setOpenFollowingsBox] = useState(false)\n\n    const navigateToUpdate = () => {\n        navigate(\"/update\")\n    }\n\n    const navigateToChangePswd = () => {\n        navigate(\"/changepswd\")\n    }\n\n    const deactivateExistingUser = async() => {\n        await dispatch(deleteUser())\n        dispatch(logout())\n    }\n\n    useEffect(() => {\n        dispatch(getMyPosts())\n    }, [dispatch])\n\n    useEffect(() => {\n        if(postLike.error) {\n            alert.error(postLike.error)\n        }\n        if(postLike.msg){\n            alert.show(postLike.msg)\n        }\n\n        if(comment.error) {\n            alert.error(comment.error)\n        }\n        if(comment.commentStatusMsg){\n            alert.show(comment.commentStatusMsg)\n        }\n\n        if(postDelete.error) {\n            alert.error(postDelete.error)\n        }\n        if(postDelete.msg) {\n            alert.show(postDelete.msg)\n        }\n\n        if(editPost.error) {\n            alert.error(editPost.error)\n        }\n        if(editPost.msg) {\n            alert.show(editPost.msg)\n        }\n\n        if(updateUserProfile.msg) {\n            alert.show(updateUserProfile.msg)\n        }\n        if(updateUserProfile.error) {\n            alert.error(updateUserProfile.error)\n        }\n\n        if(deactivateUser.msg) {\n            alert.success(deactivateUser.msg)\n        }\n        if(deactivateUser.error) {\n            alert.error(deactivateUser.error)\n        }\n        \n    }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error, postDelete.error, postDelete.msg, editPost.error, editPost.msg, updateUserProfile.msg, updateUserProfile.error, deactivateUser.msg, deactivateUser.error])\n\n    return (\n        loading === true ? (<Loading />) : (\n            <div>\n                <div className=\"profile\">\n                    <div className=\"profile_container\">\n                        <div className=\"img_section\">\n                            <img className=\"background_photo\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"bg_photo\" />\n                            {/* <img className=\"display_pic\" src={authenticatedUser.avatar.url} alt=\"dp\" /> */}\n                            {authenticatedUser.avatar.url ? (\n                                <img className=\"display_pic\" src={authenticatedUser.avatar.url} alt=\"dp\" />\n                            ) : (\n                                <img className=\"display_pic\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"dp\" />\n                            )}\n                        </div>\n                        <div className=\"full_name\">\n                            <span className=\"first_name\">{authenticatedUser.firstName}</span>\n                            <span className=\"last_name\">{authenticatedUser.lastName}</span>\n                        </div>\n                        <div className=\"user_property_section\">\n                            <div className=\"user_details\">\n                                <h2 className=\"user_info\">User Information</h2>\n                                <span onClick={() => setOpenFollowersBox(true)} className=\"info\"><strong>Followers</strong>  : {authenticatedUser.followers.length}</span>\n                                <span onClick={() => setOpenFollowingsBox(true)} className=\"info\"><strong>Followings</strong> : {authenticatedUser.followings.length}</span>\n                                <span onClick={navigateToChangePswd} className=\"info\"><strong>Change Password</strong></span>\n                                <span onClick={navigateToUpdate} className=\"info\"><strong>Edit Profile</strong></span>\n                                <span onClick={deactivateExistingUser} className=\"info\"><strong>Delete Profile</strong></span>\n                            </div>\n                            <div className=\"user_post\">\n                                {myPosts && myPosts.length > 0 ? myPosts.map((myEachPost) => (\n                                    <Post key={myEachPost._id} post={myEachPost} loading={loading} />\n                                )) : <p>You have no post yet.</p>}\n                            </div>\n                        </div>\n                        <Dialog open={openFollowersBox} onClose={() => setOpenFollowersBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followers</h3>\n                                    <Cancel onClick={() => setOpenFollowersBox(false)} />\n                                </div>\n                                \n                                {authenticatedUser.followers.length > 0 ? (\n                                    authenticatedUser.followers.map((eachFollower) => (\n                                        <Users key={eachFollower._id} userName={eachFollower.userName} userDp={eachFollower.avatar.url} userId={eachFollower._id}  />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No follower yet</p>}\n                                \n                            </div>\n                        </Dialog>\n\n                        <Dialog open={openFollowingsBox} onClose={() => setOpenFollowingsBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followings</h3>\n                                    <Cancel onClick={() => setOpenFollowingsBox(false)} />\n                                </div>\n                                \n                                {authenticatedUser.followings.length > 0 ? (\n                                    authenticatedUser.followings.map((eachFollowing) => (\n                                        <Users key={eachFollowing._id} userName={eachFollowing.userName} userDp={eachFollowing.avatar.url} userId={eachFollowing._id}  />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No followings yet</p>}\n                                \n                            </div>\n                        </Dialog>\n                    </div>\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Profile\n","import {\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\nexport const deleteUser = () => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : DELETE_USER_REQUEST\n            })\n\n            const {data} = await axios.delete('/user/profile/deactivate')\n\n            dispatch({\n                type : DELETE_USER_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : DELETE_USER_FAILURE,\n                payload : error.data.response.message\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import {\n    ADD_NEW_POST_REQUEST,\n    ADD_NEW_POST_SUCCESS, \n    ADD_NEW_POST_FAILURE,\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\nexport const addNewPost = (caption, image) => async(dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : ADD_NEW_POST_REQUEST\n            })\n\n            const {data} = await axios.post(\"/post/upload\", {caption, image}, {headers : {\"Content-Type\" : \"application/json\"}})\n\n            dispatch({\n                type : ADD_NEW_POST_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : ADD_NEW_POST_FAILURE,\n                payload : error.data.response.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n} ","import {useState, useEffect} from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useAlert} from \"react-alert\"\nimport {addNewPost} from \"../../redux/actions/addNewPost\"\nimport \"./addPost.css\"\n\nconst AddPost = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const addLatestPost = useSelector(state => state.addPost)\n    const [addPost, setAddPost] = useState({\n        caption : \"\",\n        image : null\n    })\n\n    const imageSelector = (e) => {\n        const file = e.target.files[0]\n\n        const Reader = new FileReader()\n        Reader.readAsDataURL(file)\n\n        Reader.onload = () => {\n            // basically FileReader method have 3 \n            // different state and they are initialState = 0, processingState = 1, readyState = 2\n            if(Reader.readyState === 2){\n                // Reader.result will actually read the url path of pic which we have choose from our machine\n                setAddPost({...addPost, image : Reader.result})\n            }\n        }\n\n    }\n\n    const postSubmitHandler = async (e) => {\n        e.preventDefault()\n\n        await dispatch(addNewPost(addPost.caption, addPost.image))\n\n        \n        setAddPost({\n            caption : \"\",\n            image : null\n        })\n\n    }\n\n    useEffect(() => {\n        if(addLatestPost.msg) {\n            alert.show(addLatestPost.msg)\n        }\n    }, [alert, addLatestPost.msg])\n\n    return (\n        <div>\n            <div className=\"add_post_box\">\n                <div className=\"add_post_box_container\">\n                    <h1 className=\"add_post_header\">Add Post</h1>\n                    <form className=\"add_post_form\" onSubmit={postSubmitHandler}>\n                        <input \n                         className=\"add_post_input_field\" \n                         placeholder=\"caption\" \n                         type=\"text\" \n                         value={addPost.caption}\n                         onChange={(e) => setAddPost({...addPost, caption : e.target.value})}\n                        />\n                        <input \n                         className=\"add_post_input_field\" \n                         accept=\"image/*\" \n                         type=\"file\" \n                         onChange={imageSelector}\n                        /> \n                        {addPost.image && <img src={addPost.image} className=\"post_image\" alt=\"post_image\" />}\n                        <button type=\"submit\" className=\"add_post_btn\">Add Post</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddPost\n","import {\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\nexport const profileUpdate = (updateProfileData) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : UPDATE_PROFILE_REQUEST\n            })\n\n            const {data} = await axios.put('/user/update/profile', updateProfileData, {headers : {\"Content-Type\" : \"application/json\"}})\n\n            dispatch({\n                type : UPDATE_PROFILE_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : UPDATE_PROFILE_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import {useDispatch, useSelector} from \"react-redux\"\nimport {useNavigate} from 'react-router-dom'\nimport {useState} from 'react'\nimport { Avatar } from '@material-ui/core';\nimport \"./updateProfile.css\"\nimport { profileUpdate } from \"../../redux/actions/udateProfileAction\";\nimport { loadUser } from \"../../redux/actions/authActions\"\n\nconst UpdateProfile = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const authenticatedUser = useSelector(state => state.auth)\n    const updateUserProfile = useSelector(state => state.updateUserProfile)\n    const [updateUserData, setUpdateUserData] = useState({\n        userName : authenticatedUser.userName,\n        email : authenticatedUser.email,\n        lastName : authenticatedUser.lastName,\n        firstName : authenticatedUser.firstName,\n        avatar : null,\n        prevAvatar : authenticatedUser.avatar.url,\n    })\n\n    const avatarSelector = (e) => {\n        const file = e.target.files[0]\n\n        const Reader = new FileReader()\n        Reader.readAsDataURL(file)\n\n        Reader.onload = () => {\n            // basically FileReader method have 3 \n            // different state and they are initialState = 0, processingState = 1, readyState = 2\n            if(Reader.readyState === 2){\n                // Reader.result will actually read the url path of pic which we have choose from our machine\n\n                setUpdateUserData({...updateUserData, avatar : Reader.result, prevAvatar : Reader.result})\n            }\n        }\n\n    }\n\n    const updateProfileHandler = async (e) => {\n        e.preventDefault()\n        await dispatch(profileUpdate(updateUserData))\n        dispatch(loadUser())\n        setUpdateUserData({\n            userName : \"\",\n            email : \"\",\n            password : \"\",\n            lastName : \"\",\n            firstName : \"\",\n            avatar : null,\n            prevAvatar : null,\n        })\n        navigate('/profile')\n    }\n\n    return (\n        <div>\n            <div className=\"update_box\">\n                <div className=\"update_box_container\">\n                    <h1 className=\"update_header\">Social Web</h1>\n                    <h3 className=\"update_info\">Update Your Profile</h3>\n                    <form className=\"update_form\" onSubmit={updateProfileHandler}>\n                        <Avatar alt=\"profile_avatar\" src={updateUserData.prevAvatar} sx={{ width: \"100px\", height: \"100px\" }} />\n                        <input \n                         className=\"form_input_field\" \n                         accept=\"image/*\" \n                         type=\"file\" \n                         onChange={avatarSelector}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"username\" \n                         type=\"text\" \n                         value={updateUserData.userName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, userName : e.target.value})}\n                        />\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"firstname\" \n                         type=\"text\" \n                         value={updateUserData.firstName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, firstName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"lastname\" \n                         type=\"text\" \n                         value={updateUserData.lastName}\n                         onChange={(e) => setUpdateUserData({...updateUserData, lastName : e.target.value})}\n                        /> \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"email\" \n                         type=\"text\" \n                         value={updateUserData.email}\n                         onChange={(e) => setUpdateUserData({...updateUserData, email : e.target.value})}\n                        /> \n                        <button disabled={updateUserProfile.loading === true} type=\"submit\" className=\"update_btn\">Update</button> \n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProfile\n","import {\n    CHANGE_PASSWORD_REQUEST,\n    CHANGE_PASSWORD_SUCCESS,\n    CHANGE_PASSWORD_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\nexport const changePswd = (oldPassword, newPassword) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : CHANGE_PASSWORD_REQUEST\n            })\n\n            const {data} = await axios.put('/user/update/password', {oldPassword, newPassword}, {headers : {\"Content-Type\" : \"application/json\"}})\n            // console.log(data.msg)\n            dispatch({\n                type : CHANGE_PASSWORD_SUCCESS,\n                payload : data.msg\n            })\n        } catch (error) {\n            dispatch({\n                type : CHANGE_PASSWORD_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import React, {useEffect, useState} from 'react'\n// import {useNavigate} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useAlert} from 'react-alert'\nimport { changePswd } from '../../redux/actions/changePswdAction'\nimport './changePswd.css'\n\nconst ChangePswd = () => {\n    // const authenticatedUser = useSelector(state => state.auth)\n    const changeThePassword = useSelector(state => state.pswdChange)\n    const alert = useAlert()\n    // const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [changePassword, setChangePassword] = useState({\n        oldPassword : \"\",\n        newPassword : \"\"\n    })\n\n    const submitChangePswdHandler = async(e) => {\n        e.preventDefault()\n        setChangePassword({\n            oldPassword : \"\",\n            newPassword : \"\"\n        })\n        await dispatch(changePswd(changePassword.oldPassword, changePassword.newPassword))\n\n        // if(changeThePassword.success === true) {\n        //     navigate('/profile')\n        // }\n    }\n\n    useEffect(() => {\n        if(changeThePassword.error) {\n            alert.error(changeThePassword.error)\n        }\n        if(changeThePassword.msg) {\n            alert.success(changeThePassword.msg)\n        }\n    }, [alert, changeThePassword.error, changeThePassword.msg])\n    return (\n        <div>\n            <div className=\"change_pswd_box\">\n                <div className=\"change_pswd_box_container\">\n                    <h1 className=\"change_pswd_header\">Social Web</h1>\n                    {/* <span style={{color : \"red\", margin : \"5px 0\", textAlign : \"center\", fontSize : \"small\"}}>{authenticatedUser.error}</span> */}\n                    <form className=\"change_pswd_form\" onSubmit={submitChangePswdHandler}>\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"Old Password\" \n                         type=\"text\" \n                         value={changePassword.oldPassword}\n                         onChange={(e) => setChangePassword({...changePassword, oldPassword : e.target.value})}\n                        />\n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"New Password\" \n                         type=\"text\" \n                         value={changePassword.newPassword}\n                         onChange={(e) => setChangePassword({...changePassword, newPassword : e.target.value})}\n                        />\n                        <button type=\"submit\" disabled={changeThePassword.loading === true} className=\"change_pswd_btn\">Change Password</button> \n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePswd\n","import React, { useState, useEffect } from 'react'\nimport {useAlert} from 'react-alert'\nimport {Link} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {passwordForgotten} from '../../redux/actions/forgotPasswordAction'\nimport './forgotPassword.css'\n\nconst ForgotPassword = () => {\n    const forgotPassword = useSelector(state => state.forgotPassword)\n    const alert = useAlert()\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n\n\n    useEffect(() => {\n        if(forgotPassword.msg) {\n            alert.success(forgotPassword.msg)\n        }\n        if(forgotPassword.error) {\n            alert.error(forgotPassword.error)\n        }\n    }, [alert, forgotPassword.msg, forgotPassword.error])\n\n    const tokenSubmitHandler = (e) => {\n        e.preventDefault()\n        dispatch(passwordForgotten(email))\n    }\n    return (\n        <div>\n            <div className=\"forgot_password_box\">\n                <div className=\"forgot_password_box_container\">\n                    <h1 className=\"forgot_password_header\">Forgot password</h1>\n                    <form className=\"forgot_password_form\" onSubmit={tokenSubmitHandler}>\n                        <input \n                         className=\"forgot_password_input_field\" \n                         placeholder=\"enter your email\" \n                         type=\"text\" \n                         value={email}\n                         onChange={(e) => setEmail(e.target.value)}\n                        />\n                        {/* {forgotPassword.loading === true ? <button disabled type=\"submit\" className=\"forgot_password_btn\">Send Token</button> : <button type=\"submit\" className=\"forgot_password_btn\">Send Token</button>} */}\n                        <button type=\"submit\" className=\"forgot_password_btn\">Send Token</button>\n                        <Link to=\"/reset/password/:token\">Reset password</Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword\n","import {\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const passwordForgotten = (email) => async (dispatch) => {\n    try {\n        try {\n           dispatch({\n               type : FORGOT_PASSWORD_REQUEST\n           }) \n\n           const {data} = await axios.post('/auth/forget/Password', {email}, {headers : {\"Content-Type\" : \"application/json\"}})\n\n           dispatch({\n               type : FORGOT_PASSWORD_SUCCESS,\n               payload : data.msg\n           })\n        } catch (error) {\n            dispatch({\n                type : FORGOT_PASSWORD_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useAlert} from 'react-alert'\nimport {Link, useParams} from 'react-router-dom'\nimport { passwordReset } from '../../redux/actions/pswdResetAction'\nimport './resetPswd.css'\n\nconst ResetPswd = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const params = useParams()\n    const resetPswd = useSelector(state => state.resetPswd)\n    const [resetPassword, setResetPassword] = useState(\"\")\n\n    const submitResetPswdHandler = (e) => {\n        e.preventDefault()\n        dispatch(passwordReset(params.token, resetPassword))\n        setResetPassword(\"\")\n    }\n\n    useEffect(() => {\n        if(resetPswd.msg) {\n            alert.success(resetPswd.msg)\n        }\n        if(resetPswd.error) {\n            alert.error(resetPswd.error)\n        }\n    }, [alert, resetPswd.msg, resetPswd.error])\n    return (\n        <div>\n            <div className=\"reset_pswd_box\">\n                <div className=\"reset_pswd_box_container\">\n                    <h1 className=\"reset_pswd_header\">Social Web</h1>\n                    {/* <span style={{color : \"red\", margin : \"5px 0\", textAlign : \"center\", fontSize : \"small\"}}>{authenticatedUser.error}</span> */}\n                    <form className=\"reset_pswd_form\" onSubmit={submitResetPswdHandler}>\n                        \n                        <input \n                         className=\"form_input_field\" \n                         placeholder=\"New Password\" \n                         type=\"text\" \n                         value={resetPassword}\n                         onChange={(e) => setResetPassword(e.target.value)}\n                        />\n                        <button type=\"submit\" className=\"reset_pswd_btn\">Reset Password</button> \n                        <Link to=\"/\">Go to login</Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPswd\n","import {\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const passwordReset = (token, password) => async (dispatch) => {\n    try {\n        try {\n           dispatch({\n               type : RESET_PASSWORD_REQUEST\n           }) \n\n           const {data} = await axios.put(`/auth/password/reset/${token}`, {password}, {headers : {\"Content-Type\" : \"application/json\"}})\n\n           dispatch({\n               type : RESET_PASSWORD_SUCCESS,\n               payload : data.msg\n           })\n        } catch (error) {\n            dispatch({\n                type : RESET_PASSWORD_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}","import {\n    LOAD_USER_ACCOUNT_REQUEST,\n    LOAD_USER_ACCOUNT_SUCCESS,\n    LOAD_USER_ACCOUNT_FAILURE\n} from '../constants/actionTypes'\nimport axios from 'axios'\n\n\nexport const getOtherIndividualUserAccount = (id) => async (dispatch) => {\n    try {\n        try {\n            dispatch({\n                type : LOAD_USER_ACCOUNT_REQUEST\n            })\n\n            const {data} = await axios.get(`/user/specific/${id}`)\n\n            dispatch({\n                type : LOAD_USER_ACCOUNT_SUCCESS,\n                payload : data.user\n            })\n            \n        } catch (error) {\n            dispatch({\n                type : LOAD_USER_ACCOUNT_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}","import {\n    FOLLOW_OR_UNFOLLOW_USER_REQUEST,\n    FOLLOW_OR_UNFOLLOW_USER_SUCCESS,\n    FOLLOW_OR_UNFOLLOW_USER_FAILURE\n} from \"../constants/actionTypes\"\nimport axios from \"axios\"\n\nexport const followOrUnfollowUserUser = (id) => async (dispatch) => {\n    try {\n        try {\n           dispatch({\n               type : FOLLOW_OR_UNFOLLOW_USER_REQUEST\n           }) \n\n           const {data} = await axios.get(`/user/follow/${id}`)\n\n           dispatch({\n               type : FOLLOW_OR_UNFOLLOW_USER_SUCCESS,\n               payload : data.msg\n           })\n        } catch (error) {\n            dispatch({\n                type : FOLLOW_OR_UNFOLLOW_USER_FAILURE,\n                payload : error.response.data.msg\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}","import {useSelector, useDispatch} from \"react-redux\"\nimport { useParams} from 'react-router-dom'\nimport {Cancel} from '@material-ui/icons'\nimport {Dialog, Avatar} from '@material-ui/core'\nimport {useEffect, useState} from 'react'\nimport {useAlert} from 'react-alert'\nimport Post from \"../../components/Post/Post\"\nimport \"./userAccount.css\"\n// import { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\nimport Loading from \"../../components/Loading/Loading\"\nimport Users from \"../../components/Users/Users\"\nimport { getOtherIndividualUserPost } from \"../../redux/actions/getUserPostAction\"\nimport { getOtherIndividualUserAccount } from \"../../redux/actions/getUserAction\"\nimport { followOrUnfollowUserUser } from \"../../redux/actions/followOrUnfollowAction\"\n\nconst UserAccont = () => {\n    // const navigate = useNavigate()\n    const params = useParams()\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const authenticatedUser = useSelector(state => state.auth)\n    const {user, error, loading} = useSelector(state => state.getUserAccount)\n    const followOrUnfollow = useSelector(state => state.followOrUnfollow)\n    const getUserPost = useSelector(state => state.getUserPost)\n    const postLike = useSelector(state => state.likePost)\n    const comment = useSelector(state => state.comment)\n    // const getAllMyPosts = useSelector(state => state.getMyPosts)\n    // const {loading, myPosts} = getAllMyPosts\n\n    const [openFollowersBox, setOpenFollowersBox] = useState(false)\n    const [openFollowingsBox, setOpenFollowingsBox] = useState(false)\n\n    const [followingUser, setFollowingUser] = useState(false)\n    const [myPersonalProfile, setMyPesonalProfile] = useState(false)\n\n    const followOrUnFollowUser = async () => {\n        setFollowingUser(!followingUser)\n        await dispatch(followOrUnfollowUserUser(user._id))\n        dispatch(getOtherIndividualUserAccount(params.id))\n    }\n    \n\n    useEffect(() => { \n        const dispatchFunction = async () => {\n            await dispatch(getOtherIndividualUserAccount(params.id))\n            dispatch(getOtherIndividualUserPost(params.id))\n        }\n        dispatchFunction()\n\n        // if(user) {\n        //     user.followers.forEach((individualFollower) => {\n        //         if(authenticatedUser._id === individualFollower._id) {\n        //             setFollowingUser(true)\n        //         }else {\n        //             setFollowingUser(false)\n        //         }\n        //     }) \n        // }\n    }, [dispatch, params.id])\n\n    useEffect(() => {\n        if(authenticatedUser._id === params.id) {\n            setMyPesonalProfile(true)\n        }\n\n        // if(user === null) {\n        //     dispatch(getOtherIndividualUserAccount(params.id))\n\n        //     user.followers.forEach((individualFollower) => {\n        //         if(authenticatedUser._id === individualFollower._id) {\n        //             setFollowingUser(true)\n        //         }else {\n        //             setFollowingUser(false)\n        //         }\n        //     }) \n        // }\n\n        if(getUserPost.posts) {\n            getUserPost.posts.map((post) => {\n                return post.user.followers.forEach((individualFollower) => {\n                    if(authenticatedUser._id === individualFollower) {\n                            setFollowingUser(true)\n                        }else {\n                            setFollowingUser(false)\n                        }\n                    })\n                }\n            )\n        }\n        \n    }, [authenticatedUser._id, params.id, user, getUserPost.posts])\n\n\n\n    useEffect(() => {\n        if(postLike.error) {\n            alert.error(postLike.error)\n        }\n        if(postLike.msg){\n            alert.success(postLike.msg)\n        }\n\n        if(comment.error) {\n            alert.error(comment.error)\n        }\n        if(comment.commentStatusMsg){\n            alert.success(comment.commentStatusMsg)\n        }\n\n        if(error) {\n            alert.error(error)\n        }\n\n        if(followOrUnfollow.msg) {\n            alert.success(followOrUnfollow.msg)\n        }\n        if(followOrUnfollow.error) {\n            alert.error(followOrUnfollow.error)\n        }\n        \n    }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error, error, followOrUnfollow.error, followOrUnfollow.msg])\n\n    return (\n        loading ? (<Loading />) : (\n            <div>\n                <div className=\"profile\">\n                    <div className=\"profile_container\">\n                            \n                                <div className=\"img_section\">\n                                    <img className=\"background_photo\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"bg_photo\" />\n                                    {user.avatar ? (\n                                        <Avatar style={{width: \"150px\", height: \"150px\", border: \"5px solid white\", position: \"absolute\", marginTop: \"100px\" }} alt=\"profile_avatar\" src={user.avatar.url}  />\n\n                                    ) : (\n                                        <img className=\"display_pic\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"dp\" /> \n                                    )}\n                                    \n                                </div>\n                                <div className=\"full_name\">\n                                    <span className=\"first_name\">{user.firstName}</span>\n                                    <span className=\"last_name\">{user.lastName}</span>\n                                </div>\n                                <div className=\"user_property_section\">\n                                    <div className=\"user_details\">\n                                        <h2 className=\"user_info\">User Information</h2>\n                                        <span onClick={() => setOpenFollowersBox(true)} className=\"info\"><strong>Followers</strong>  : {user.followers ? user.followers.length : 0}</span>\n                                        <span onClick={() => setOpenFollowingsBox(true)} className=\"info\"><strong>Followings</strong> : {user.followings ? user.followings.length : 0}</span>\n                                        {myPersonalProfile ? null : <span style={{ background: followingUser ? \"red\" : \"\" }} onClick={followOrUnFollowUser} className=\"info\">{followingUser ? <strong>unFollow</strong> : <strong>Follow</strong>}</span>}\n                                        \n                                    </div>\n                                    <div className=\"user_post\">\n                                        {getUserPost.posts && getUserPost.posts.length > 0 ? getUserPost.posts.map((EachPostOfUser) => (\n                                            <Post key={EachPostOfUser._id} post={EachPostOfUser} loading={loading} />\n                                        )) : <p>User have no post yet.</p>}\n                                    </div>\n                                </div>\n                            \n                        {user.followers ? ( \n                            <>\n                                <Dialog open={openFollowersBox} onClose={() => setOpenFollowersBox(false)}>\n                                    <div className=\"dialog_box\">\n                                        <div className=\"dialog_box_header\">\n                                            <h3 style={{marginBottom : \"10px\"}}>Followers</h3>\n                                            <Cancel onClick={() => setOpenFollowersBox(false)} />\n                                        </div>\n                                        \n                                        {user.followers.length > 0 ? (\n                                            user.followers.map((eachFollower) => (\n                                                <Users key={eachFollower._id} userName={eachFollower.userName} userDp={eachFollower.avatar.url} userId={eachFollower._id} />\n                                            ))\n                                        ) : <p style={{marginTop : \"10px\"}}>No follower yet</p>}\n                                        \n                                    </div>\n                                </Dialog>\n\n                                <Dialog open={openFollowingsBox} onClose={() => setOpenFollowingsBox(false)}>\n                                    <div className=\"dialog_box\">\n                                        <div className=\"dialog_box_header\">\n                                            <h3 style={{marginBottom : \"10px\"}}>Followings</h3>\n                                            <Cancel onClick={() => setOpenFollowingsBox(false)} />\n                                        </div>\n                                        \n                                        {user.followings.length > 0 ? (\n                                            user.followings.map((eachFollowing) => (\n                                                <Users key={eachFollowing._id} userName={eachFollowing.userName} userDp={eachFollowing.avatar.url} userId={eachFollowing._id}  />\n                                            ))\n                                        ) : <p style={{marginTop : \"10px\"}}>No followings yet</p>}\n                                        \n                                    </div>\n                                </Dialog>\n                            </>\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default UserAccont\n","import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport Users from '../../components/Users/Users'\nimport { allUsersList } from '../../redux/actions/allUsersAction'\nimport \"./search.css\"\n\nconst Search = () => {\n    const dispatch = useDispatch()\n    const allUsers = useSelector(state => state.allUsers)\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n   \n    // useEffect(() => {\n    //     allUsersList(searchTerm)\n        \n    // }, [dispatch, searchTerm])\n\n    const searchSubmitHandler = (e) => {\n        e.preventDefault()\n        dispatch(allUsersList(searchTerm))\n        setSearchTerm(\"\")\n    }\n\n    return (\n        <div className=\"search\">\n            <div className=\"search_container\">\n                <h2 style={{textAlign : 'center'}}>Search User</h2>\n                <form className=\"search_form\" onSubmit={searchSubmitHandler} >\n                    <input \n                     className=\"input_field\" \n                     placeholder=\"search user\" \n                     type=\"text\"\n                     value={searchTerm}\n                     onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button className=\"search_btn\" type='submit'>Search</button>\n                    <div className=\"appreance_of_users\">\n                    {allUsers.users.map((user) => (\n                        <Users key={user._id} userId={user._id} userName={user.userName} userDp={user.avatar ? user.avatar.url : null} />   \n                    ))}\n                </div>\n                </form>\n                {/* <div className=\"appreance_of_users\">\n                    {allUsers.users.map((user) => (\n                        <Users key={user._id} userId={user._id} userName={user.userName} userDp={user.avatar ? user.avatar.url : null} />\n                        \n                    ))}\n                </div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Search\n","import {Routes, Route} from \"react-router-dom\"\nimport \"./App.css\"\nimport Login from \"./pages/Login/Login\"\nimport Register from \"./pages/Register/Register\"\nimport Header from \"./components/Header/Header\"\nimport Home from \"./pages/Home/Home\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {useState, useEffect} from \"react\"\nimport Drawer from \"./components/Drawer/Drawer\"\nimport Profile from \"./pages/Profile/Profile\"\nimport { loadUser } from \"./redux/actions/authActions\"\nimport AddPost from \"./components/AddPost/AddPost\"\nimport UpdateProfile from \"./pages/UpdateProfile/UpdateProfile\"\nimport ChangePswd from \"./pages/ChangePswd/ChangePswd\"\nimport ForgotPassword from \"./pages/forgotPassword/ForgotPassword\"\nimport ResetPswd from \"./pages/ResetPswd/ResetPswd\"\nimport UserAccont from \"./pages/UserAccount/UserAccont\"\nimport Search from \"./pages/SearchUser/Search\"\n\nconst App = () => {\n    const authenticatedUser = useSelector(state => state.auth)\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n\n    useEffect(() => {\n        dispatch(loadUser());\n    }, [dispatch])\n    \n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n    return (\n        <div>\n            {authenticatedUser.isAuthenticated === true && <Header open={open} handleOpen={handleOpen} handleClose={handleClose} />}\n            <Drawer open={open} handleClose={handleClose} />\n            <Routes>\n                <Route path=\"/register\" element={authenticatedUser.isAuthenticated === true ? <Profile /> : <Register />} />\n                <Route path=\"/\" element={authenticatedUser.isAuthenticated === true ? <Home /> : <Login />} />\n                <Route path=\"/profile\" element={authenticatedUser.isAuthenticated === true ? <Profile /> : <Login />} />\n                <Route path=\"/update\" element={authenticatedUser.isAuthenticated === true ? <UpdateProfile /> : <Login />} />\n                <Route path=\"/add\" element={authenticatedUser.isAuthenticated === true ? <AddPost /> : <Login />} />\n                <Route path=\"/changepswd\" element={authenticatedUser.isAuthenticated === true ? <ChangePswd /> : <Login />} />\n                <Route path=\"/forgot/password\" element={authenticatedUser.isAuthenticated === true ? <ChangePswd /> : <ForgotPassword />} />\n                <Route path=\"/reset/password/:token\" element={authenticatedUser.isAuthenticated === true ? <Profile /> : <ResetPswd />} />\n                <Route path=\"/user/:id\" element={authenticatedUser.isAuthenticated === true? <UserAccont  /> : <Login />} />\n                <Route path=\"/search\" element={authenticatedUser.isAuthenticated === true ? <Search /> : <Login /> } />\n            </Routes>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {Provider as AlertProvider, transitions, positions} from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport store from './redux/store';\nimport App from './App';\n\n// optional configuration\nconst option = {\n  position : positions.BOTTOM_CENTER,\n  timeout : 5000,\n  transition : transitions.SCALE,\n  offset : '30px'\n}\n\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <AlertProvider template={AlertTemplate} {...option}>\n          <App />\n        </AlertProvider>\n      </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}