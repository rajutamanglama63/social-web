{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE } from \"../constants/actionTypes\";\nconst initialState = {\n  _id: \"\",\n  userName: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  posts: \"\",\n  followers: \"\",\n  followings: \"\",\n  email: \"\",\n  error: \"\",\n  loading: true,\n  isAuthenticated: false\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return state.loading;\n\n    case REGISTER_SUCCESS:\n      const registeredUser = action.payload;\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        _id: registeredUser._id,\n        userName: registeredUser.userName,\n        firstName: registeredUser.firstName,\n        lastName: registeredUser.lastName,\n        posts: registeredUser.posts,\n        followings: registeredUser.followings,\n        followers: registeredUser.followers\n      };\n\n    case REGISTER_FAILURE:\n      return { ...state,\n        loading: false,\n        isAuthenticated: false,\n        error: action.payload\n      };\n\n    case LOGIN_REQUEST:\n      return state.loading;\n\n    case LOGIN_SUCCESS:\n      const loggedInUser = action.payload;\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        _id: loggedInUser._id,\n        userName: loggedInUser.userName,\n        firstName: loggedInUser.firstName,\n        lastName: loggedInUser.lastName,\n        posts: loggedInUser.posts,\n        followings: loggedInUser.followings,\n        followers: loggedInUser.followers\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        loading: false,\n        isAuthenticated: false,\n        error: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return state.loading;\n\n    case LOGOUT_SUCCESS:\n      return action.payload;\n\n    case LOGOUT_FAILURE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/redux/reducers/authReducer.js"],"names":["REGISTER_REQUEST","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","initialState","_id","userName","firstName","lastName","posts","followers","followings","email","error","loading","isAuthenticated","authReducer","state","action","type","registeredUser","payload","loggedInUser"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,gBANJ,EAOIC,cAPJ,EAQIC,cARJ,EASIC,cATJ,QAUO,0BAVP;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAG,EADW;AAEjBC,EAAAA,QAAQ,EAAG,EAFM;AAGjBC,EAAAA,SAAS,EAAG,EAHK;AAIjBC,EAAAA,QAAQ,EAAG,EAJM;AAKjBC,EAAAA,KAAK,EAAG,EALS;AAMjBC,EAAAA,SAAS,EAAG,EANK;AAOjBC,EAAAA,UAAU,EAAG,EAPI;AAQjBC,EAAAA,KAAK,EAAG,EARS;AASjBC,EAAAA,KAAK,EAAG,EATS;AAUjBC,EAAAA,OAAO,EAAG,IAVO;AAWjBC,EAAAA,eAAe,EAAG;AAXD,CAArB;AAcA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKxB,gBAAL;AACI,aAAOsB,KAAK,CAACH,OAAb;;AAEJ,SAAKd,gBAAL;AACI,YAAMoB,cAAc,GAAGF,MAAM,CAACG,OAA9B;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWH,QAAAA,OAAO,EAAG,KAArB;AAA4BC,QAAAA,eAAe,EAAG,IAA9C;AAAoDV,QAAAA,GAAG,EAAGe,cAAc,CAACf,GAAzE;AAA8EC,QAAAA,QAAQ,EAAGc,cAAc,CAACd,QAAxG;AAAkHC,QAAAA,SAAS,EAAGa,cAAc,CAACb,SAA7I;AAAwJC,QAAAA,QAAQ,EAAGY,cAAc,CAACZ,QAAlL;AAA4LC,QAAAA,KAAK,EAAGW,cAAc,CAACX,KAAnN;AAA0NE,QAAAA,UAAU,EAAGS,cAAc,CAACT,UAAtP;AAAkQD,QAAAA,SAAS,EAAGU,cAAc,CAACV;AAA7R,OAAP;;AAEJ,SAAKd,gBAAL;AACI,aAAO,EAAC,GAAGqB,KAAJ;AAAWH,QAAAA,OAAO,EAAG,KAArB;AAA4BC,QAAAA,eAAe,EAAG,KAA9C;AAAqDF,QAAAA,KAAK,EAAGK,MAAM,CAACG;AAApE,OAAP;;AAEJ,SAAKxB,aAAL;AACI,aAAOoB,KAAK,CAACH,OAAb;;AAEJ,SAAKhB,aAAL;AACI,YAAMwB,YAAY,GAAGJ,MAAM,CAACG,OAA5B;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWH,QAAAA,OAAO,EAAG,KAArB;AAA4BC,QAAAA,eAAe,EAAG,IAA9C;AAAoDV,QAAAA,GAAG,EAAGiB,YAAY,CAACjB,GAAvE;AAA4EC,QAAAA,QAAQ,EAAGgB,YAAY,CAAChB,QAApG;AAA8GC,QAAAA,SAAS,EAAGe,YAAY,CAACf,SAAvI;AAAkJC,QAAAA,QAAQ,EAAGc,YAAY,CAACd,QAA1K;AAAoLC,QAAAA,KAAK,EAAGa,YAAY,CAACb,KAAzM;AAAgNE,QAAAA,UAAU,EAAGW,YAAY,CAACX,UAA1O;AAAsPD,QAAAA,SAAS,EAAGY,YAAY,CAACZ;AAA/Q,OAAP;;AAEJ,SAAKX,aAAL;AACI,aAAO,EAAC,GAAGkB,KAAJ;AAAWH,QAAAA,OAAO,EAAG,KAArB;AAA4BC,QAAAA,eAAe,EAAG,KAA9C;AAAqDF,QAAAA,KAAK,EAAGK,MAAM,CAACG;AAApE,OAAP;;AAGJ,SAAKpB,cAAL;AACI,aAAOgB,KAAK,CAACH,OAAb;;AAEJ,SAAKZ,cAAL;AACI,aAAOgB,MAAM,CAACG,OAAd;;AAEJ,SAAKlB,cAAL;AACI,aAAOe,MAAM,CAACG,OAAd;;AAEJ;AACI,aAAOJ,KAAP;AAhCR;AAkCH,CAnCM","sourcesContent":["import {\n    REGISTER_REQUEST, \n    REGISTER_FAILURE, \n    LOGIN_REQUEST, \n    LOGIN_SUCCESS, \n    LOGIN_FAILURE, \n    REGISTER_SUCCESS, \n    LOGOUT_REQUEST, \n    LOGOUT_SUCCESS, \n    LOGOUT_FAILURE,\n} from \"../constants/actionTypes\"\n\nconst initialState = {\n    _id : \"\",\n    userName : \"\",\n    firstName : \"\",\n    lastName : \"\",\n    posts : \"\",\n    followers : \"\",\n    followings : \"\",\n    email : \"\",\n    error : \"\",\n    loading : true,\n    isAuthenticated : false\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case REGISTER_REQUEST:\n            return state.loading;\n\n        case REGISTER_SUCCESS:\n            const registeredUser = action.payload;\n            return {...state, loading : false, isAuthenticated : true, _id : registeredUser._id, userName : registeredUser.userName, firstName : registeredUser.firstName, lastName : registeredUser.lastName, posts : registeredUser.posts, followings : registeredUser.followings, followers : registeredUser.followers};\n\n        case REGISTER_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n        case LOGIN_REQUEST:\n            return state.loading;\n    \n        case LOGIN_SUCCESS:\n            const loggedInUser = action.payload;\n            return {...state, loading : false, isAuthenticated : true, _id : loggedInUser._id, userName : loggedInUser.userName, firstName : loggedInUser.firstName, lastName : loggedInUser.lastName, posts : loggedInUser.posts, followings : loggedInUser.followings, followers : loggedInUser.followers};\n            \n        case LOGIN_FAILURE:\n            return {...state, loading : false, isAuthenticated : false, error : action.payload};\n\n\n        case LOGOUT_REQUEST:\n            return state.loading;\n\n        case LOGOUT_SUCCESS:\n            return action.payload;\n\n        case LOGOUT_FAILURE:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}