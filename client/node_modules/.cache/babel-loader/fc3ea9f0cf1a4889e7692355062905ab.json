{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE } from \"../constants/actionTypes\";\nconst initialState = {\n  _id: null,\n  userName: null,\n  firstName: null,\n  lastName: null,\n  posts: null,\n  followers: null,\n  followings: null,\n  email: null,\n  loading: true\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return state.loading;\n\n    case REGISTER_SUCCESS:\n      const registeredUser = action.payload;\n      return { ...state,\n        loading: false,\n        _id: registeredUser._id,\n        userName: registeredUser.userName,\n        firstName: registeredUser.firstName,\n        lastName: registeredUser.lastName,\n        posts: registeredUser.posts,\n        followings: registeredUser.followings,\n        followers: registeredUser.followers\n      };\n\n    case REGISTER_FAILURE:\n      return action.payload;\n\n    case LOGIN_REQUEST:\n      return state.loading;\n\n    case LOGIN_SUCCESS:\n      const loggedInUser = action.payload;\n      return { ...state,\n        loading: false,\n        _id: loggedInUser._id,\n        userName: loggedInUser.userName,\n        firstName: loggedInUser.firstName,\n        lastName: loggedInUser.lastName,\n        posts: loggedInUser.posts,\n        followings: loggedInUser.followings,\n        followers: loggedInUser.followers\n      };\n\n    case LOGIN_FAILURE:\n      return action.payload;\n\n    case LOGOUT_REQUEST:\n      return state.loading;\n\n    case LOGOUT_SUCCESS:\n      return action.payload;\n\n    case LOGOUT_FAILURE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/redux/reducers/authReducer.js"],"names":["REGISTER_REQUEST","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","initialState","_id","userName","firstName","lastName","posts","followers","followings","email","loading","authReducer","state","action","type","registeredUser","payload","loggedInUser"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,gBAA1B,EAA4CC,aAA5C,EAA2DC,aAA3D,EAA0EC,aAA1E,EAAyFC,gBAAzF,EAA2GC,cAA3G,EAA2HC,cAA3H,EAA2IC,cAA3I,QAAgK,0BAAhK;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAG,IADW;AAEjBC,EAAAA,QAAQ,EAAG,IAFM;AAGjBC,EAAAA,SAAS,EAAG,IAHK;AAIjBC,EAAAA,QAAQ,EAAG,IAJM;AAKjBC,EAAAA,KAAK,EAAG,IALS;AAMjBC,EAAAA,SAAS,EAAG,IANK;AAOjBC,EAAAA,UAAU,EAAG,IAPI;AAQjBC,EAAAA,KAAK,EAAG,IARS;AASjBC,EAAAA,OAAO,EAAG;AATO,CAArB;AAYA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKtB,gBAAL;AACI,aAAOoB,KAAK,CAACF,OAAb;;AAEJ,SAAKb,gBAAL;AACI,YAAMkB,cAAc,GAAGF,MAAM,CAACG,OAA9B;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWF,QAAAA,OAAO,EAAG,KAArB;AAA4BR,QAAAA,GAAG,EAAGa,cAAc,CAACb,GAAjD;AAAsDC,QAAAA,QAAQ,EAAGY,cAAc,CAACZ,QAAhF;AAA0FC,QAAAA,SAAS,EAAGW,cAAc,CAACX,SAArH;AAAgIC,QAAAA,QAAQ,EAAGU,cAAc,CAACV,QAA1J;AAAoKC,QAAAA,KAAK,EAAGS,cAAc,CAACT,KAA3L;AAAkME,QAAAA,UAAU,EAAGO,cAAc,CAACP,UAA9N;AAA0OD,QAAAA,SAAS,EAAGQ,cAAc,CAACR;AAArQ,OAAP;;AAEJ,SAAKd,gBAAL;AACI,aAAOoB,MAAM,CAACG,OAAd;;AAEJ,SAAKtB,aAAL;AACI,aAAOkB,KAAK,CAACF,OAAb;;AAEJ,SAAKf,aAAL;AACI,YAAMsB,YAAY,GAAGJ,MAAM,CAACG,OAA5B;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWF,QAAAA,OAAO,EAAG,KAArB;AAA4BR,QAAAA,GAAG,EAAGe,YAAY,CAACf,GAA/C;AAAoDC,QAAAA,QAAQ,EAAGc,YAAY,CAACd,QAA5E;AAAsFC,QAAAA,SAAS,EAAGa,YAAY,CAACb,SAA/G;AAA0HC,QAAAA,QAAQ,EAAGY,YAAY,CAACZ,QAAlJ;AAA4JC,QAAAA,KAAK,EAAGW,YAAY,CAACX,KAAjL;AAAwLE,QAAAA,UAAU,EAAGS,YAAY,CAACT,UAAlN;AAA8ND,QAAAA,SAAS,EAAGU,YAAY,CAACV;AAAvP,OAAP;;AAEJ,SAAKX,aAAL;AACI,aAAOiB,MAAM,CAACG,OAAd;;AAEJ,SAAKlB,cAAL;AACI,aAAOc,KAAK,CAACF,OAAb;;AAEJ,SAAKX,cAAL;AACI,aAAOc,MAAM,CAACG,OAAd;;AAEJ,SAAKhB,cAAL;AACI,aAAOa,MAAM,CAACG,OAAd;;AAEJ;AACI,aAAOJ,KAAP;AA/BR;AAiCH,CAlCM","sourcesContent":["import {REGISTER_REQUEST, REGISTER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE} from \"../constants/actionTypes\"\n\nconst initialState = {\n    _id : null,\n    userName : null,\n    firstName : null,\n    lastName : null,\n    posts : null,\n    followers : null,\n    followings : null,\n    email : null,\n    loading : true,\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case REGISTER_REQUEST:\n            return state.loading;\n\n        case REGISTER_SUCCESS:\n            const registeredUser = action.payload;\n            return {...state, loading : false, _id : registeredUser._id, userName : registeredUser.userName, firstName : registeredUser.firstName, lastName : registeredUser.lastName, posts : registeredUser.posts, followings : registeredUser.followings, followers : registeredUser.followers};\n\n        case REGISTER_FAILURE:\n            return action.payload;\n\n        case LOGIN_REQUEST:\n            return state.loading;\n    \n        case LOGIN_SUCCESS:\n            const loggedInUser = action.payload;\n            return {...state, loading : false, _id : loggedInUser._id, userName : loggedInUser.userName, firstName : loggedInUser.firstName, lastName : loggedInUser.lastName, posts : loggedInUser.posts, followings : loggedInUser.followings, followers : loggedInUser.followers};\n    \n        case LOGIN_FAILURE:\n            return action.payload;\n\n        case LOGOUT_REQUEST:\n            return state.loading;\n\n        case LOGOUT_SUCCESS:\n            return action.payload;\n\n        case LOGOUT_FAILURE:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}