{"ast":null,"code":"var _jsxFileName = \"/home/raju/Web Project/mern/socialPractise/client/src/pages/UserAccount/UserAccont.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { Cancel } from '@material-ui/icons';\nimport { Dialog } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport Post from \"../../components/Post/Post\";\nimport \"./userAccount.css\"; // import { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\n\nimport Loading from \"../../components/Loading/Loading\";\nimport Users from \"../../components/Users/Users\";\nimport { getOtherIndividualUserPost } from \"../../redux/actions/getUserPostAction\";\nimport { getOtherIndividualUserAccount } from \"../../redux/actions/getUserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  // const navigate = useNavigate()\n  const params = useParams();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const authenticatedUser = useSelector(state => state.auth);\n  const getUserAccount = useSelector(state => state.getUserAccount);\n  console.log(getUserAccount);\n  const getUserPost = useSelector(state => state.getUserPost);\n  const postLike = useSelector(state => state.likePost);\n  const comment = useSelector(state => state.comment); // const getAllMyPosts = useSelector(state => state.getMyPosts)\n  // const {loading, myPosts} = getAllMyPosts\n\n  const [openFollowersBox, setOpenFollowersBox] = useState(false);\n  const [openFollowingsBox, setOpenFollowingsBox] = useState(false);\n  const [followingUser, setFollowingUser] = useState(false);\n  const [myPersonalProfile, setMyPesonalProfile] = useState(false);\n\n  const followOrUnFollowUser = () => {\n    setFollowingUser(!followingUser);\n  };\n\n  useEffect(() => {\n    dispatch(getOtherIndividualUserAccount(params.id));\n    dispatch(getOtherIndividualUserPost(params.id));\n  }, [dispatch, params.id]); // useEffect(() => {\n  //     if(authenticatedUser._id === params.id) {\n  //         setMyPesonalProfile(true)\n  //     }\n  //     if(getUserAccount.user) {\n  //         getUserAccount.user.followers.forEach((individualFollower) => {\n  //             if(authenticatedUser._id === individualFollower._id) {\n  //                 setFollowingUser(true)\n  //             }else {\n  //                 setFollowingUser(false)\n  //             }\n  //         })\n  //     }\n  // }, [authenticatedUser._id, params.id, getUserAccount.user])\n\n  useEffect(() => {\n    if (postLike.error) {\n      alert.error(postLike.error);\n    }\n\n    if (postLike.msg) {\n      alert.success(postLike.msg);\n    }\n\n    if (comment.error) {\n      alert.error(comment.error);\n    }\n\n    if (comment.commentStatusMsg) {\n      alert.success(comment.commentStatusMsg);\n    }\n  }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error]);\n  return getUserAccount.loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 35\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile_container\",\n        children: getUserAccount.user && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img_section\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"background_photo\",\n              src: \"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n              alt: \"bg_photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"display_pic\",\n              src: \"https://res.cloudinary.com/imageinternetstorage/image/upload/v1651254407/socialWeb/n6ooishik8zhdms35qlv.jpg\",\n              alt: \"dp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"full_name\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"first_name\",\n              children: getUserAccount.user.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"last_name\",\n              children: getUserAccount.user.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_property_section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"user_info\",\n                children: \"User Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setOpenFollowersBox(true),\n                className: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Followers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 106\n                }, this), \"  : \", authenticatedUser.followers.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setOpenFollowingsBox(true),\n                className: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Followings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 107\n                }, this), \" : \", authenticatedUser.followings.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), myPersonalProfile ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  background: followingUser ? \"red\" : \"\"\n                },\n                onClick: followOrUnFollowUser,\n                className: \"info\",\n                children: followingUser ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Follow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 191\n                }, this) : /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"unFollow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 217\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_post\",\n              children: getUserPost.posts && getUserPost.posts.length > 0 ? getUserPost.posts.map(EachPostOfUser => /*#__PURE__*/_jsxDEV(Post, {\n                post: EachPostOfUser,\n                loading: getUserAccount.loading\n              }, EachPostOfUser._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"User have no post yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Profile, \"Cg4cP9aPbPij7rNx7wYDzhEjpV0=\", false, function () {\n  return [useParams, useDispatch, useAlert, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/raju/Web Project/mern/socialPractise/client/src/pages/UserAccount/UserAccont.js"],"names":["useSelector","useDispatch","useParams","Cancel","Dialog","useEffect","useState","useAlert","Post","Loading","Users","getOtherIndividualUserPost","getOtherIndividualUserAccount","Profile","params","dispatch","alert","authenticatedUser","state","auth","getUserAccount","console","log","getUserPost","postLike","likePost","comment","openFollowersBox","setOpenFollowersBox","openFollowingsBox","setOpenFollowingsBox","followingUser","setFollowingUser","myPersonalProfile","setMyPesonalProfile","followOrUnFollowUser","id","error","msg","success","commentStatusMsg","loading","user","firstName","lastName","followers","length","followings","background","posts","map","EachPostOfUser","_id"],"mappings":"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","sourcesContent":["import {useSelector, useDispatch} from \"react-redux\"\nimport { useParams} from 'react-router-dom'\nimport {Cancel} from '@material-ui/icons'\nimport {Dialog} from '@material-ui/core'\nimport {useEffect, useState} from 'react'\nimport {useAlert} from 'react-alert'\nimport Post from \"../../components/Post/Post\"\nimport \"./userAccount.css\"\n// import { getMyPosts } from \"../../redux/actions/getMyPostsAction\"\nimport Loading from \"../../components/Loading/Loading\"\nimport Users from \"../../components/Users/Users\"\nimport { getOtherIndividualUserPost } from \"../../redux/actions/getUserPostAction\"\nimport { getOtherIndividualUserAccount } from \"../../redux/actions/getUserAction\"\n\nconst Profile = () => {\n    // const navigate = useNavigate()\n    const params = useParams()\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const authenticatedUser = useSelector(state => state.auth)\n    const getUserAccount = useSelector(state => state.getUserAccount)\n    console.log(getUserAccount)\n    const getUserPost = useSelector(state => state.getUserPost)\n    const postLike = useSelector(state => state.likePost)\n    const comment = useSelector(state => state.comment)\n    // const getAllMyPosts = useSelector(state => state.getMyPosts)\n    // const {loading, myPosts} = getAllMyPosts\n\n    const [openFollowersBox, setOpenFollowersBox] = useState(false)\n    const [openFollowingsBox, setOpenFollowingsBox] = useState(false)\n\n    const [followingUser, setFollowingUser] = useState(false)\n    const [myPersonalProfile, setMyPesonalProfile] = useState(false)\n\n    const followOrUnFollowUser = () => {\n        setFollowingUser(!followingUser)\n    }\n    \n\n    useEffect(() => {\n        dispatch(getOtherIndividualUserAccount(params.id))\n        dispatch(getOtherIndividualUserPost(params.id))\n    }, [dispatch, params.id])\n\n    // useEffect(() => {\n    //     if(authenticatedUser._id === params.id) {\n    //         setMyPesonalProfile(true)\n    //     }\n\n    //     if(getUserAccount.user) {\n    //         getUserAccount.user.followers.forEach((individualFollower) => {\n    //             if(authenticatedUser._id === individualFollower._id) {\n    //                 setFollowingUser(true)\n    //             }else {\n    //                 setFollowingUser(false)\n    //             }\n    //         })\n    //     }\n    // }, [authenticatedUser._id, params.id, getUserAccount.user])\n\n    useEffect(() => {\n        if(postLike.error) {\n            alert.error(postLike.error)\n        }\n        if(postLike.msg){\n            alert.success(postLike.msg)\n        }\n\n        if(comment.error) {\n            alert.error(comment.error)\n        }\n        if(comment.commentStatusMsg){\n            alert.success(comment.commentStatusMsg)\n        }\n        \n    }, [alert, postLike.error, postLike.msg, comment.commentStatusMsg, comment.error])\n\n    return (\n        getUserAccount.loading ? (<Loading />) : (\n            <div>\n                <div className=\"profile\">\n                    <div className=\"profile_container\">\n                        {getUserAccount.user && (\n                            <>\n                                <div className=\"img_section\">\n                                    <img className=\"background_photo\" src=\"https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"bg_photo\" />\n                                    <img className=\"display_pic\" src=\"https://res.cloudinary.com/imageinternetstorage/image/upload/v1651254407/socialWeb/n6ooishik8zhdms35qlv.jpg\" alt=\"dp\" />\n                                </div>\n                                <div className=\"full_name\">\n                                    <span className=\"first_name\">{getUserAccount.user.firstName}</span>\n                                    <span className=\"last_name\">{getUserAccount.user.lastName}</span>\n                                </div>\n                                <div className=\"user_property_section\">\n                                    <div className=\"user_details\">\n                                        <h2 className=\"user_info\">User Information</h2>\n                                        <span onClick={() => setOpenFollowersBox(true)} className=\"info\"><strong>Followers</strong>  : {authenticatedUser.followers.length}</span>\n                                        <span onClick={() => setOpenFollowingsBox(true)} className=\"info\"><strong>Followings</strong> : {authenticatedUser.followings.length}</span>\n                                        {myPersonalProfile ? null : <span style={{ background: followingUser ? \"red\" : \"\" }} onClick={followOrUnFollowUser} className=\"info\">{followingUser ? <strong>Follow</strong> : <strong>unFollow</strong>}</span>}\n                                        \n                                    </div>\n                                    <div className=\"user_post\">\n                                        {getUserPost.posts && getUserPost.posts.length > 0 ? getUserPost.posts.map((EachPostOfUser) => (\n                                            <Post key={EachPostOfUser._id} post={EachPostOfUser} loading={getUserAccount.loading} />\n                                        )) : <p>User have no post yet.</p>}\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                        \n                        {/* <Dialog open={openFollowersBox} onClose={() => setOpenFollowersBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followers</h3>\n                                    <Cancel onClick={() => setOpenFollowersBox(false)} />\n                                </div>\n                                \n                                {getUserAccount.user.followers.length > 0 ? (\n                                    getUserAccount.user.followers.map((eachFollower) => (\n                                        <Users key={eachFollower._id} userName={eachFollower.userName} />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No follower yet</p>}\n                                \n                            </div>\n                        </Dialog>\n\n                        <Dialog open={openFollowingsBox} onClose={() => setOpenFollowingsBox(false)}>\n                            <div className=\"dialog_box\">\n                                <div className=\"dialog_box_header\">\n                                    <h3 style={{marginBottom : \"10px\"}}>Followings</h3>\n                                    <Cancel onClick={() => setOpenFollowingsBox(false)} />\n                                </div>\n                                \n                                {getUserAccount.user.followings.length > 0 ? (\n                                    getUserAccount.user.followings.map((eachFollowing) => (\n                                        <Users key={eachFollowing._id} userName={eachFollowing.userName} />\n                                    ))\n                                ) : <p style={{marginTop : \"10px\"}}>No followings yet</p>}\n                                \n                            </div>\n                        </Dialog> */}\n                    </div>\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}